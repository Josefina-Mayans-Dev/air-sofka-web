{"version":3,"file":"seat-availability.mjs","sources":["../../../projects/seat-availability/src/infrastructure/services/seat-map.service.ts","../../../projects/seat-availability/src/domain/state/state.factory.ts","../../../projects/seat-availability/src/domain/state/seat-map.state.ts","../../../projects/seat-availability/src/domain/state/seats.state.ts","../../../projects/seat-availability/src/domain/state/index.ts","../../../projects/seat-availability/src/application/get-seat-map.usecase.ts","../../../projects/seat-availability/src/domain/model/seat.model.ts","../../../projects/seat-availability/src/infrastructure/services/seat.service.ts","../../../projects/seat-availability/src/infrastructure/ui/components/seat-map/seat-map.component.ts","../../../projects/seat-availability/src/infrastructure/ui/components/seat-map/seat-map.component.html","../../../projects/seat-availability/src/application/select-seat.usecase.ts","../../../projects/seat-availability/src/infrastructure/ui/containers/seat-map/seat-map-container.component.ts","../../../projects/seat-availability/src/infrastructure/ui/routes/seat.routes.ts","../../../projects/seat-availability/src/public-api.ts","../../../projects/seat-availability/src/seat-availability.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, interval } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { ISeat } from '../../domain/model/seat.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeatMapService {\n  /* private readonly API_URL = '/api/flights'; */\n  private readonly API_URL = 'assets/seat-map.json';\n  private readonly REFRESH_INTERVAL = 10000; // 10 seconds\n\n  constructor(private http: HttpClient) {}\n\n  getSeatMap(flightId: string): Observable<ISeat[]> {\n   /*  return this.http.get<ISeat[]>(`${this.API_URL}/${flightId}/seats`); */\n   return this.http.get<ISeat[]>(`${this.API_URL}`);\n  }\n\n  // Optional: Polling method if you want periodic updates\n  getSeatMapWithPolling(flightId: string): Observable<ISeat[]> {\n    return interval(this.REFRESH_INTERVAL).pipe(\n      switchMap(() => this.getSeatMap(flightId))\n    );\n  }\n\n  selectSeat(flightId: string, seatId: string): Observable<void> {\n    return this.http.post<void>(\n      /* `${this.API_URL}/${flightId}/seats/${seatId}/select`,\n      {} */\n     `${this.API_URL}`,\n      {}\n    );\n  }\n\n  unselectSeat(flightId: string, seatId: string): Observable<void> {\n    return this.http.post<void>(\n     /*  `${this.API_URL}/${flightId}/seats/${seatId}/unselect`,\n      {} */\n     `${this.API_URL}`,\n     {}\n    );\n  }\n}","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IState } from \"../model/state.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateFactory {\n  state<T>(subject$: BehaviorSubject<T>): IState<T> {\n    return {\n      $: () => subject$.asObservable(),\n      snapshot: () => this.immutabilize(subject$.getValue()),\n      set: (value: T) => subject$.next(this.immutabilize(value))\n    }\n  }\n\n  private immutabilize<T>(value: T): T {\n    return JSON.parse(JSON.stringify(value));\n  }\n}","import { inject, Injectable } from \"@angular/core\";\nimport { StateFactory } from \"./state.factory\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { ISeatMap } from \"../model/seat-map.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeatMapState {\n  private readonly _factory = inject(StateFactory);\n\n  //#region Subjects\n  private readonly seatMap$ = new BehaviorSubject<ISeatMap>({\n    flightId: '',\n    seats: [],\n    selectedSeats: []\n  });\n  //definir error para validacion\n  //#endregion\n\n  store() {\n    return {\n      seatMap: this._factory.state(this.seatMap$)\n    }\n  }\n}","import { inject, Injectable } from \"@angular/core\";\nimport { StateFactory } from \"./state.factory\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { ISeat } from \"../model/seat.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeatsState {\n  private readonly _factory = inject(StateFactory);\n\n  //#region Subjects\n  private readonly seats$ = new BehaviorSubject<ISeat[]>([]);\n  private readonly selectedSeats$ = new BehaviorSubject<ISeat[]>([]);\n  private readonly selectedSeatsId$ = new BehaviorSubject<string[]>([]);\n  //#endregion\n\n  store() {\n    return {\n      seats: this._factory.state(this.seats$),\n      selectedSeats: this._factory.state(this.selectedSeats$),\n      selectedSeatsId: this._factory.state(this.selectedSeatsId$)\n    }\n  }\n}","import { inject, Injectable } from \"@angular/core\";\nimport { SeatMapState} from \"./seat-map.state\";\nimport { SeatsState } from \"./seats.state\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class State {\n  private readonly _seatMap = inject(SeatMapState);\n  private readonly _seats = inject(SeatsState);\n\n  get seatMap() {\n    return this._seatMap.store();\n  }\n\n  get seats() {\n    return this._seats.store();\n  }\n}","import { inject, Injectable } from \"@angular/core\";\nimport { SeatMapService } from \"../infrastructure/services/seat-map.service\";\nimport { State } from \"../domain/state\";\nimport { ISeat } from \"../domain/model/seat.model\";\nimport { BehaviorSubject, Observable, Subscription, tap } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetSeatsUsecase {\n  private readonly _service = inject(SeatMapService);\n  private readonly _state = inject(State);\n  private subscriptions: Subscription;\n  private readonly errorSubject = new BehaviorSubject<string | null>(null);\n\n  //#region Observables\n  seats$(): Observable<ISeat[]> {\n    return this._state.seats.seats.$();\n  }\n\n  selectedSeats$(): Observable<ISeat[]> {\n    return this._state.seats.selectedSeats.$();\n  }\n\n  \n  error$(): Observable<string | null> {\n    return this.errorSubject.asObservable();\n  }\n  //#endregion\n\n  //#region Public Methods\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n    this.errorSubject.complete();\n  }\n\n  execute(flightId: string): void {\n    this.errorSubject.next(null);\n\n    this.subscriptions.add(\n      this._service.getSeatMap(flightId)\n        .pipe(\n          tap({\n            next: (seats) => {\n              this._state.seats.seats.set(seats);\n            },\n            error: (error) => {\n              this.errorSubject.next(error.message || 'Failed to fetch seats');\n            }\n          })\n        )\n        .subscribe()\n    );\n  }\n  //#endregion\n}","export enum SeatClass {\n  FIRST = 'FIRST',\n  BUSINESS = 'BUSINESS',\n  ECONOMY = 'ECONOMY'\n}\n\nexport enum SeatStatus {\n  OCCUPIED = 'OCCUPIED',\n  AVAILABLE = 'AVAILABLE',\n  SELECTED = 'SELECTED'\n}\n\n\nexport interface ISeat {\n  id: string;\n  number: string;\n  row: number;\n  column: string;\n  type: SeatClass;\n  status: SeatStatus;\n  price: number;\n  idFlight: string;\n}\n\nexport interface SeatRow {\n  row: number;\n  seats: ISeat[];\n}\n\nexport interface SeatUpdateRequest {\n  flightId: string;\n  seatIds: string[];\n}\n\nexport interface SeatUpdateResponse {\n  success: boolean;\n  updatedSeats: ISeat[];\n  message?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, catchError, map } from 'rxjs';\nimport { ISeat, SeatRow, SeatUpdateRequest, SeatUpdateResponse } from '../../domain/model/seat.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SeatService {\n  private apiUrl = \"http://localhost:8080/seats\";\n\n  constructor(private http: HttpClient) {}\n\n  getFlightSeats(flightId: string): Observable<SeatRow[]> {\n    return this.http.get<ISeat[]>(`${this.apiUrl}/${flightId}`).pipe(\n      map(seats => this.transformSeatsToRows(seats)),\n      catchError(this.handleError)\n    );\n  }\n\n  bookSeats(flightId: string, seatIds: string[]): Observable<SeatUpdateResponse> {\n    const request: SeatUpdateRequest = {\n      flightId,\n      seatIds\n    };\n\n    return this.http.put<SeatUpdateResponse>(`${this.apiUrl}/book`, request).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private transformSeatsToRows(seats: ISeat[]): SeatRow[] {\n    // Group seats by row\n    const groupedSeats = seats.reduce((acc, seat) => {\n      if (!acc[seat.row]) {\n        acc[seat.row] = [];\n      }\n      acc[seat.row].push(seat);\n      return acc;\n    }, {} as { [key: number]: ISeat[] });\n\n    // Convert to array and sort seats within each row by column\n    return Object.entries(groupedSeats)\n      .map(([rowNum, seats]) => ({\n        row: parseInt(rowNum),\n        seats: seats.sort((a, b) => a.column.localeCompare(b.column))\n      }))\n      .sort((a, b) => a.row - b.row);\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n}","import { Component, OnInit, Input, output } from '@angular/core';\nimport { SeatService } from '../../../services/seat.service';\nimport { ISeat, SeatRow, SeatStatus, SeatClass } from '../../../../domain/model/seat.model';\n\n@Component({\n  selector: 'lib-seat-map',\n  templateUrl: './seat-map.component.html',\n  styleUrls: ['./seat-map.component.scss']\n})\nexport class SeatMapComponent implements OnInit {\n  \n  @Input() flightId!: string;\n  \n  seatMap: SeatRow[] = [];\n  selectedSeats: string[] = [];\n  selectedSeatsId: string[] = [];\n  loading = false;\n  error: string | null = null;\n  SeatStatus = SeatStatus;\n  onChoseSeat  =  output<string[]>()\n\n  constructor(private seatService: SeatService) {}\n\n  ngOnInit() {\n    this.loadSeats();\n  }\n\n  loadSeats(): void {\n    this.loading = true;\n    this.error = null;\n\n    this.seatService.getFlightSeats(this.flightId).subscribe({\n      next: (seatMap) => {\n        this.seatMap = seatMap;\n        this.loading = false;\n      },\n      error: (error) => {\n        this.error = 'Failed to load seats. Please try again.';\n        this.loading = false;\n        console.error('Error loading seats:', error);\n      }\n    });\n  }\n\n  toggleSeatSelection(seat: ISeat): void {\n    if (seat.status === SeatStatus.OCCUPIED) return;\n    \n    const index = this.selectedSeats.indexOf(seat.number);\n    if (index === -1) {\n      this.selectedSeats.push(seat.number);\n      this.selectedSeatsId.push(seat.id);\n      seat.status = SeatStatus.SELECTED;\n    } else {\n      this.selectedSeats.splice(index, 1);\n      this.selectedSeatsId.splice(index, 1);\n      seat.status = SeatStatus.AVAILABLE;\n    }\n  }\n\n  getSeatClasses(seat: ISeat): { [key: string]: boolean } {\n    return {\n      'seat': true,\n      'seat--occupied': seat.status === SeatStatus.OCCUPIED,\n      'seat--selected': seat.status === SeatStatus.SELECTED,\n      'seat--first': seat.type === SeatClass.FIRST,\n      'seat--business': seat.type === SeatClass.BUSINESS,\n      'seat--economy': seat.type === SeatClass.ECONOMY\n    };\n  }\n\n  getTotalPrice(): number {\n    return this.seatMap\n      .flatMap(row => row.seats)\n      .filter(seat => this.selectedSeats.includes(seat.number))\n      .reduce((total, seat) => total + seat.price, 0);\n  }\n\n  bookSeats(): void {\n    if (!this.selectedSeats.length) return;\n\n    this.loading = true;\n    this.error = null;\n\n    this.onChoseSeat.emit(this.selectedSeatsId);\n  }\n}","<div class=\"seat-map-container\">\n    <div class=\"seat-map-header\">\n      <h2>Select Seats</h2>\n      <div class=\"aircraft-info\">\n        <i class=\"fas fa-plane\"></i>\n        <span>Boeing 737/3</span>\n      </div>\n    </div>\n  \n    <div class=\"seat-map-scroll\">\n      <div class=\"seat-map-grid\">\n        @for (row of seatMap; track row.row) {\n        <div class=\"seat-row\" >\n          <!-- Left side seats -->\n          <div class=\"seat-group\">\n            @for (seat of row.seats.slice(0, 3); track seat.id) {\n            <button\n              [class]=\"getSeatClasses(seat)\"\n              [disabled]=\"seat.status === SeatStatus.OCCUPIED\"\n              (click)=\"toggleSeatSelection(seat)\"\n            >\n              {{ seat.number }}\n            </button>\n          }\n          </div>\n          \n          <!-- Aisle -->\n          <div class=\"aisle\"></div>\n          \n          <!-- Right side seats -->\n          <div class=\"seat-group\">\n            @for (seat of row.seats.slice(3); track seat.id) {\n            <button\n              [class]=\"getSeatClasses(seat)\"\n              [disabled]=\"seat.status === SeatStatus.OCCUPIED\"\n              (click)=\"toggleSeatSelection(seat)\"\n            >\n              {{ seat.number }}\n            </button>\n          }\n          </div>\n        </div>\n      }\n      </div>\n    </div>\n  \n    <div class=\"booking-info\">\n      <div class=\"selection-info\">\n        <p>Selected: {{ selectedSeats.length ? selectedSeats.join(', ') : 'None' }}</p>\n        <p>Total: ${{ getTotalPrice().toFixed(2) }} USD</p>\n      </div>\n      <button\n        class=\"book-button\"\n        [disabled]=\"selectedSeats.length === 0\"\n        (click)=\"bookSeats()\"\n      >\n        Book Selected Seats\n      </button>\n    </div>\n  \n    <div class=\"seat-legend\">\n      <div class=\"legend-item\">\n        <div class=\"legend-box\"></div>\n        <span>Available</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-box legend-box--occupied\"></div>\n        <span>Occupied</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-box legend-box--first\"></div>\n        <span>First Class Seat</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-box legend-box--business\"></div>\n        <span>Business Class Seat</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-box legend-box--economy\"></div>\n        <span>Economy Class Seat</span>\n      </div>\n      <div class=\"legend-item\">\n        <div class=\"legend-box legend-box--selected\"></div>\n        <span>Selected</span>\n      </div>\n    </div>\n  </div>\n  ","import { inject, Injectable } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { SeatMapService } from '../infrastructure/services/seat-map.service';\nimport { SeatMapState } from '../domain/state/seat-map.state';\nimport { State } from '../domain/state';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectSeatUseCase {\n  private readonly _state = inject(State);\n  readonly _router = inject(Router);\n\n  private subscriptions: Subscription;\n\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n\n  selectedSeatsId$(): Observable<string[]> {\n    return this._state.seats.selectedSeatsId.$();\n  }\n\n\n  execute(ids: string[]): void {\n    this._state.seats.selectedSeatsId.set(ids);\n    this._router.navigate(['/pay']);\n  }\n}\n","import { Component, Input, OnInit, OnDestroy, inject } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { ISeat } from '../../../../domain/model/seat.model';\nimport { GetSeatsUsecase } from '../../../../application/get-seat-map.usecase';\n/* import { SelectSeatUseCase } from '../../../../application/seat-map/select-seat.usecase';\nimport { UnselectSeatUseCase } from '../../../../application/seat-map/unselect-seat.usecase'; */\n\nimport { AsyncAction } from 'rxjs/internal/scheduler/AsyncAction';\nimport { AsyncPipe } from '@angular/common';\nimport { SeatMapComponent } from '../../components/seat-map/seat-map.component';\nimport { SelectSeatUseCase } from '../../../../application/select-seat.usecase';\nimport { Router } from '@angular/router';\nimport { GetFlightsSelectedUseCase, IFlightSelected } from 'flight';\n\n@Component({\n  selector: 'app-seat-map-container',\n  imports: [SeatMapComponent],\n  template: `\n  <lib-seat-map [flightId]=\"flightId\"  (onChoseSeat)=\"handleSeatSelection($event)\"></lib-seat-map>\n  `\n})\n\nexport class SeatMapContainer implements OnInit, OnDestroy {\n  private readonly _getSeatsUsecase = inject(GetSeatsUsecase);\n  private readonly _selectedSeatsUsecase = inject(SelectSeatUseCase);\n  public seat$: Observable<ISeat>;\n  readonly seats$ = this._getSeatsUsecase.seats$();\n  readonly selectedSeats$ = this._getSeatsUsecase.selectedSeats$();\n  readonly selectedSeatsId$ = this._selectedSeatsUsecase.selectedSeatsId$();\n  readonly error$ = this._getSeatsUsecase.error$();\n\n  readonly _getFlightSelected = inject(GetFlightsSelectedUseCase);\n  public flight$: Observable<IFlightSelected>;\n  flightId: string = '';\n\n  ngOnInit(): void {\n    this._getFlightSelected.initSubscription();\n    this.flight$ = this._getFlightSelected.flight$();\n    this.flight$.subscribe((flight) => {\n      this.flightId = flight.origin.id;\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    this._getFlightSelected.destroySubscription();\n  }\n\n\n  private loadSeatMap(): void {\n    \n  }\n\n  handleSeatSelection(seatsId: string[]): void {\n    this._selectedSeatsUsecase.execute(seatsId);\n  }\n\n\n\n}","import { Routes } from \"@angular/router\";\nimport { SeatMapContainer } from \"../containers/seat-map/seat-map-container.component\";\nimport { DefaultLayoutComponent } from \"shared\";\n\n\n\nexport const seatRoutes: Routes = [\n\n       {\n                path: '',\n                component: DefaultLayoutComponent,\n                children: [\n                  { path: '', component: SeatMapContainer }\n                ]\n        \n            },\n\n            { path: '', redirectTo: '', pathMatch: 'full' },\n            { path: '**', redirectTo: 'home' },\n      \n  ];","/*\n * Public API Surface of seat-availability\n */\n\nexport * from \"./infrastructure/services/seat-map.service\";\nexport * from './infrastructure/ui/routes/seat.routes';\nexport *  from './application/get-seat-map.usecase';\nexport *  from './application/select-seat.usecase';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.SeatService"],"mappings":"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"}