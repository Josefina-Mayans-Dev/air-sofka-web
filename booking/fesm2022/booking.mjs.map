{"version":3,"file":"booking.mjs","sources":["../../../projects/booking/src/infrastructure/ui/components/flight-leg/flight-leg.component.ts","../../../projects/booking/src/infrastructure/ui/components/flight-leg/flight-leg.component.html","../../../projects/booking/src/infrastructure/ui/components/flight-card/flight-card.component.ts","../../../projects/booking/src/infrastructure/ui/components/flight-card/flight-card.component.html","../../../projects/booking/src/infrastructure/ui/containers/flight-card-container/flight-card-container.component.ts","../../../projects/booking/src/infrastructure/ui/containers/flight-card-container/flight-card-container.component.html","../../../projects/booking/src/infrastructure/ui/components/resume-passenger-card/resume-passenger-card.component.ts","../../../projects/booking/src/infrastructure/ui/components/resume-passenger-card/resume-passenger-card.component.html","../../../projects/booking/src/infrastructure/ui/containers/passenger-card-container/passenger-card-container.component.ts","../../../projects/booking/src/infrastructure/ui/containers/passenger-card-container/passenger-card-container.component.html","../../../projects/booking/src/infrastructure/ui/components/price-breakdown-card/price-breakdown-card.component.ts","../../../projects/booking/src/infrastructure/ui/components/price-breakdown-card/price-breakdown-card.component.html","../../../projects/booking/src/domain/state/state.factory.ts","../../../projects/booking/src/domain/state/booking.state.ts","../../../projects/booking/src/domain/state/index.ts","../../../projects/booking/src/infrastructure/services/booking.service.ts","../../../projects/booking/src/application/cost/get-cost-brackdown.usecase.ts","../../../projects/booking/src/infrastructure/ui/containers/price-breakdown-container/price-breakdown-container.component.ts","../../../projects/booking/src/infrastructure/ui/containers/price-breakdown-container/price-breakdown-container.component.html","../../../projects/booking/src/infrastructure/ui/components/flight-detail/flight-detail.component.ts","../../../projects/booking/src/infrastructure/ui/components/flight-detail/flight-detail.component.html","../../../projects/booking/src/infrastructure/ui/components/price-row/price-row.component.ts","../../../projects/booking/src/infrastructure/ui/components/price-row/price-row.component.html","../../../projects/booking/src/infrastructure/ui/components/total-price/total-price.component.ts","../../../projects/booking/src/infrastructure/ui/components/total-price/total-price.component.html","../../../projects/booking/src/infrastructure/ui/components/resume-card/resume-card.component.ts","../../../projects/booking/src/infrastructure/ui/components/resume-card/resume-card.component.html","../../../projects/booking/src/application/booking/create-booking.usecase.ts","../../../projects/booking/src/infrastructure/ui/containers/resume-card-container/resume-card-container.component.ts","../../../projects/booking/src/infrastructure/ui/containers/resume-card-container/resume-card-container.component.html","../../../projects/booking/src/infrastructure/ui/layouts/booking-resume-layout/booking-resume-layout.component.ts","../../../projects/booking/src/infrastructure/ui/layouts/booking-resume-layout/booking-resume-layout.component.html","../../../projects/booking/src/infrastructure/ui/routes/booking.routes.ts","../../../projects/booking/src/booking.ts"],"sourcesContent":["import { Component, input } from '@angular/core';\nexport interface FlightLeg {\n  departureTime: string;\n  departureAirportCode: string;\n  arrivalTime: string;\n  arrivalAirportCode: string;\n  stopAirportCode?: string;\n  stopDuration?: string;    \n}\n\n\n@Component({\n  selector: 'lib-flight-leg',\n  imports: [],\n  templateUrl: './flight-leg.component.html',\n  styleUrl: './flight-leg.component.scss'\n})\nexport class FlightLegComponent {\n  leg = input.required<FlightLeg>();\n}\n","<div class=\"flight-leg\">\n  <div class=\"flight-leg__departure\">\n    <span class=\"flight-leg__time\">{{ leg().departureTime }}</span>\n    <span class=\"flight-leg__airport\">{{ leg().departureAirportCode }}</span>\n  </div>\n\n  <div class=\"flight-leg__stop\">\n    @if (leg().stopAirportCode) {\n    <span class=\"flight-leg__stop-airport\">{{ leg().stopAirportCode }}</span>\n    <span class=\"flight-leg__stop-dot\"></span>\n    <span class=\"flight-leg__stop-duration\">{{ leg().stopDuration }}</span>\n    }\n  </div>\n  <div class=\"flight-leg__arrow\">\n    <span class=\"flight-leg__arrow--start\"></span>\n    <hr />\n    <span class=\"flight-leg__arrow--end\"></span>\n  </div>\n\n\n\n  <div class=\"flight-leg__arrival\">\n    <span class=\"flight-leg__time\">{{ leg().arrivalTime }}</span>\n    <span class=\"flight-leg__airport\">{{ leg().arrivalAirportCode }}</span>\n  </div>\n</div>","import { Component, input, output } from '@angular/core';\nimport { FlightLeg, FlightLegComponent } from '../flight-leg/flight-leg.component';\nimport { DetailFlightComponent, IDetailsFlight, IRouteFlight, RouteFlightComponent } from 'shared';\n\n@Component({\n  selector: 'lib-flight-card',\n  imports: [FlightLegComponent, RouteFlightComponent, DetailFlightComponent],\n  templateUrl: './flight-card.component.html',\n  styleUrl: './flight-card.component.scss'\n})\nexport class FlightCardComponent {\n\n  title = input.required<string>(); \n  date = input.required<string>();  \n  legs = input.required<IRouteFlight[]>();\n  duration = input<string>('15 h 55 min'); \n  operatedBy = input<string>('Air Europa');\n  details = input<IDetailsFlight>();\n}\n","<div class=\"flight-card\">\n  <div class=\"flight-card__header\">\n    <h2 class=\"flight-card__title\">{{ title() }}</h2>\n    <p class=\"flight-card__date\">{{ date() }}</p>\n  </div>\n  <div class=\"flight-card__separator\"></div>\n  <div class=\"flight-card__content\">\n\n    <div class=\"flight-card__legs\">\n      @for (leg of legs(); track $index) {\n        <lib-route-flight [routeData]=\"leg\"></lib-route-flight>\n      }\n    </div>\n\n    <div class=\"flight-card__right\">\n      <lib-detail-flight [detailsData]=\"details()\"></lib-detail-flight>\n    </div>\n\n  </div>\n\n\n</div>","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { FlightCardComponent } from '../../components/flight-card/flight-card.component';\nimport { FlightInfo, FlightLeg } from '../../interfaces/flight-data.interface';\nimport { GetFlightsSelectedUseCase, GetFlightsUseCase, IFlight, IFlightSelected } from 'flight';\nimport { map, pipe, switchMap, tap } from 'rxjs';\n\n@Component({\n  selector: 'lib-flight-card-container',\n  imports: [FlightCardComponent],\n  templateUrl: './flight-card-container.component.html',\n})\nexport class FlightCardContainerComponent implements OnInit, OnDestroy {\n  flights: FlightInfo[] = [];\n  readonly _getFlightSelected = inject(GetFlightsSelectedUseCase);\n  readonly _getFlight = inject(GetFlightsUseCase);\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this._getFlightSelected.initSubscription();\n    this.getFlightData();\n\n  }\n\n  ngOnDestroy(): void {\n    this._getFlightSelected.destroySubscription();\n  }\n\n  maptoFlightLegs(flight: IFlight): FlightInfo {\n\n    const departureTime = new Date(flight.departure).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    const arrivalTime = new Date(flight.arrival).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n    const departureDate = new Date(flight.departure);\n    const arrivalDate = new Date(flight.arrival);\n    \n    let durationMs = arrivalDate.getTime() - departureDate.getTime();\n    let durationMinutes = Math.floor(durationMs / (60 * 1000));\n\n    \n    const hours = Math.floor(durationMinutes / 60);\n    const minutes = durationMinutes % 60;\n\n    const duration = `${hours}h ${minutes}m`;\n\n    const diffInDays = Math.floor((arrivalDate.getTime() - departureDate.getTime()) / (1000 * 60 * 60 * 24));\n    const days = `+${diffInDays}`;\n    const leg = {\n      departureTime: departureTime,\n      departureAirportCode: flight?.origin,\n      stopAirportCode: flight?.destination,\n      stopDuration: '2h35m',\n      arrivalTime: arrivalTime,\n      arrivalAirportCode: flight?.destination,\n      days: days\n    };\n    return {\n      title: 'From ' + flight?.origin + ' to ' + flight?.destination,\n      date: departureDate.toLocaleDateString('en-US', { \n        weekday: 'long',\n        day: '2-digit',\n        month: 'long',\n        year: 'numeric'\n      }),\n      legs: [leg],\n      detail: {\n        detail: [`Duration: ${duration}`, `Operated by Air-Sofka`],\n        ref: 'See itinerary details'\n      }\n    };\n  \n  }\n\n  getFlightData() {\n    this._getFlightSelected.flight$().pipe(\n      switchMap((flight: IFlightSelected) =>\n        this._getFlight.flights$().pipe(\n          map(flights => \n            flights.filter(f => \n              f.id === flight.origin.id || f.id === flight.destination.id ||\n              (flight.origin.id === flight.destination.id && f.id === flight.origin.id)\n            )\n          )\n        )\n      ),\n      tap(filteredFlights => {\n        this.flights = filteredFlights.map(f => this.maptoFlightLegs(f));\n      })\n    ).subscribe();\n  }\n  \n\n\n}\n","<h1 class=\"title-h1\">Your Flight</h1>\n@for (item of flights; track $index) {\n<lib-flight-card\n  [title]=\"item.title\"\n  [date]=\"item.date\"\n  [legs]=\"item.legs\"\n  [details]=\"item.detail\"\n></lib-flight-card>\n\n}\n","import { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'lib-resume-passenger-card',\n  imports: [],\n  templateUrl: './resume-passenger-card.component.html',\n  styleUrl: './resume-passenger-card.component.scss'\n})\nexport class ResumePassengerCardComponent {\n  icon = input<string>('person'); \n  name = input.required<string>();\n  email = input<string>('');\n  phone = input<string>('');\n  type = input<string>('');\n}\n","<div class=\"passenger-card\">\n  <div class=\"passenger-card__details\">\n    <div class=\"passenger-card__icon\">\n      <span>\n        <svg width=\"28\" height=\"28\">\n          <use xlink:href=\"assets/svgs/person-svgrepo-com.svg#person-adult\"></use>\n        </svg>\n      </span>\n\n    </div>\n    <div class=\"passenger-card__info\">\n      <h3 class=\"passenger-card__name\">{{ name() }}</h3>\n      @if (email()) {\n      <p class=\"passenger-card__email\">{{ email() }}</p>\n      }\n      @if (phone()) {\n      <p class=\"passenger-card__phone\">{{ phone() }}</p>\n      }\n      @if (type()) {\n      <p class=\"passenger-card__type\">{{ type() }}</p>\n      }\n    </div>\n  </div>\n</div>","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { BookingResumeLayoutComponent } from \"../../layouts/booking-resume-layout/booking-resume-layout.component\";\nimport { ResumePassengerCardComponent } from '../../components/resume-passenger-card/resume-passenger-card.component';\nimport { IPassenger, IPassengerContact, PassengerContactUseCase, PassengerSaveUseCase } from 'passenger';\nimport { map, Observable, switchMap } from 'rxjs';\nimport { AsyncPipe, JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'lib-passenger-card-container',\n  imports: [ResumePassengerCardComponent],\n  templateUrl: './passenger-card-container.component.html',\n})\nexport class PassengerCardContainerComponent implements OnInit, OnDestroy {\n  \n  private readonly _passengerSave  = inject(PassengerSaveUseCase);\n  private readonly _passengerContact  = inject(PassengerContactUseCase);\n  public contactSave$: Observable<IPassengerContact>;\n  public listPassengers$: Observable<IPassenger[]>;\n  passengers: IPassenger[] = [];\n  contact:  IPassengerContact;\n\n  ngOnInit(): void {\n    this._passengerSave.initSubscriptions();\n    this._passengerContact.initSubscriptions();\n    this.listPassengers$ = this._passengerSave.getListPassengers$();\n    this.contactSave$ = this._passengerContact.passengerContact$();\n\n    this.getPassengers();\n  }\n\n  getPassengers(){\n    this._passengerSave.getListPassengers$().pipe(\n      map(data => data.map(passenger => {\n        this.passengers.push(passenger);\n        \n      })) \n    )\n    .subscribe();\n\n    this._passengerContact.passengerContact$().pipe(\n      map(contact => {\n        this.contact = contact;\n        \n      }) \n    )\n    .subscribe();\n  }\n  ngOnDestroy(): void {\n    this._passengerSave.destroySubscriptions();\n    this._passengerContact.destroySubscriptions();\n  }\n  \n\n}\n","<h1  class=\"title-h1\">Passenger</h1>\n<lib-resume-passenger-card\n  [name]=\"passengers[0]?.treatment+' '+passengers[0]?.name+' '+passengers[0]?.lastName\"\n  [email]=\"contact?.email\"\n  [phone]=\"contact?.prefix+' '+contact?.telephoneNumber\"\n  type=\"Adult\"\n/>\n@for (item of passengers; track $index) {\n  <lib-resume-passenger-card\n  [name]=\"item?.treatment+' '+item?.name+' '+item?.lastName\"\n  [email]=\"\"\n  [phone]=\"\"\n  [type]=\"\"\n/>\n}\n","import { CommonModule, DecimalPipe } from '@angular/common';\nimport { Component, input } from '@angular/core';\n\n\nexport interface PriceDetail {\n  label: string;\n  amount: number;\n}\n\n\n@Component({\n  selector: 'lib-price-breakdown-card',\n  imports: [DecimalPipe],\n  templateUrl: './price-breakdown-card.component.html',\n  styleUrl: './price-breakdown-card.component.scss'\n})\nexport class PriceBreakdownCardComponent {\n  title = input<string>('Price breakdown');\n  totalPrice = input.required<number>();\n  currency = input<string>('USD');\n\n\n  details = input<PriceDetail[]>([]);\n}\n","<div class=\"price-breakdown\">\n    <h2 class=\"price-breakdown__title\">{{ title() }}</h2>\n    <div class=\"price-breakdown__separator\"></div>\n  \n    <div class=\"price-breakdown__details\">\n      @for (detail of details(); track detail) {\n        <div class=\"price-breakdown__item\">\n          <span class=\"price-breakdown__label\">{{ detail.label }}</span>\n          <span class=\"price-breakdown__amount\">{{ detail.amount | number: '1.2-2' }} {{ currency() }}</span>\n        </div>\n      }\n    </div>\n  \n    <div class=\"price-breakdown__total\">\n      <span class=\"price-breakdown__label\">Total Price</span>\n      <span class=\"price-breakdown__amount\">{{ totalPrice() | number: '1.2-2' }} {{ currency() }}</span>\n    </div>\n  </div>","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IState } from \"../model/state.model\";\n\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StateFactory {\n    state<T>(subject$: BehaviorSubject<T>): IState<T> {\n        return {\n            $: () => subject$.asObservable(),\n            snapshot: () => this.immutabilize(subject$.getValue()),\n            set: (value: T) => subject$.next(this.immutabilize(value))\n        }\n    }\n\n    private immutabilize<T>(value: T): T {\n        return JSON.parse(JSON.stringify(value));\n    }\n}","import { Injectable, inject } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\nimport { ICostBreakdown } from \"../model/const-brackdown.model\";\nimport { IBooking, IBookingResponse } from \"../model/booking.model\";\nimport { StateFactory } from \"./state.factory\";\n\n@Injectable({\n    providedIn: 'root'\n  })\n  export class BookingState {\n    private readonly _factory = inject(StateFactory);\n  \n    \n    \n    private readonly costBreakdown$ = new BehaviorSubject<ICostBreakdown>(null);\n    private readonly  booking$  =  new BehaviorSubject<IBookingResponse>(null);\n  \n    store() {\n      return {\n        costBreakdown: this._factory.state(this.costBreakdown$),\n        booking: this._factory.state(this.booking$)\n      }\n    }\n  }","import { Injectable, inject } from \"@angular/core\";\nimport { BookingState } from \"./booking.state\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class State {\n    private readonly _booking = inject(BookingState);\n\n    get booking() {\n        return this._booking.store();\n    }\n}","import { inject, Injectable } from \"@angular/core\";\nimport { ICostBreakdownRequest, ICostBreakdownResponse } from \"../../domain/model/const-brackdown.model\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { IBooking, IBookingRequest, IBookingResponse } from \"../../domain/model/booking.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n  mainUrl = 'http://localhost:8080/booking';\n  http = inject(HttpClient);\n\n\n  getCostBreakdown(costRequest: ICostBreakdownRequest): Observable<ICostBreakdownResponse> {\n    return this.http.post<ICostBreakdownResponse>(`${this.mainUrl}/cost`, costRequest);\n\n  }\n\n  makeBooking(request: IBookingRequest): Observable<IBookingResponse> {\n    return this.http.post<IBookingResponse>(`${this.mainUrl}`, request);\n\n  }\n\n}","import { Injectable, inject } from '@angular/core';\nimport { Observable, Subscription, tap } from 'rxjs';\nimport { ICostBreakdown, ICostBreakdownRequest } from '../../domain/model/const-brackdown.model';\nimport { State } from '../../domain/state';\nimport { BookingService } from '../../infrastructure/services/booking.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetCostBreakdownUsecase {\n  private readonly _service = inject(BookingService);\n  private readonly _state = inject(State);\n  private subscriptions: Subscription;\n\n  constBreadown$(): Observable<ICostBreakdown> {\n    return this._state.booking.costBreakdown.$();\n  }\n\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(costRequest: ICostBreakdownRequest): void {\n    const userId: string   =  localStorage.getItem('id');\n    this.subscriptions.add(\n      this._service\n        .getCostBreakdown({...costRequest, userId})\n        .pipe(\n            tap({\n                next: (costBreakdown) => {\n                    this._state.booking.costBreakdown.set(costBreakdown);\n                },\n                error: (error) => {\n                    console.error('Error getting cost breakdown:', error);\n                }\n            })\n        )\n        .subscribe()\n    );\n  }\n}\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  PriceBreakdownCardComponent,\n  PriceDetail,\n} from '../../components/price-breakdown-card/price-breakdown-card.component';\nimport { GetSeatsUsecase, SelectSeatUseCase } from 'seat-availability';\nimport { map, Observable, switchMap, tap } from 'rxjs';\nimport { GetCostBreakdownUsecase } from '../../../../application/cost/get-cost-brackdown.usecase';\nimport { ICostBreakdown } from '../../../../domain/model/const-brackdown.model';\n\n@Component({\n  selector: 'lib-price-breakdown-container',\n  imports: [PriceBreakdownCardComponent],\n  templateUrl: './price-breakdown-container.component.html',\n})\nexport class PriceBreakdownContainerComponent implements OnInit, OnDestroy {\n  readonly _selectedSeatsUsecase = inject(SelectSeatUseCase);\n  readonly _getCostBreakdown = inject(GetCostBreakdownUsecase);\n  listSeatsIds: Observable<string[]>;\n\n  seatsIds: string[] = [];\n\n  priceDetails: PriceDetail[] = [\n  ];\n  totalPrice: number = 0;\n  currency: string = 'USD';\n\n  ngOnInit(): void {\n    this._selectedSeatsUsecase.initSubscriptions();\n    this._getCostBreakdown.initSubscriptions();\n    this.getSeatsIds();\n  }\n\n  ngOnDestroy(): void {\n    this._getCostBreakdown.destroySubscriptions();\n    this._selectedSeatsUsecase.destroySubscriptions();\n  }\n\n  getSeatsIds() {\n    this._selectedSeatsUsecase\n      .selectedSeatsId$()\n      .pipe(\n        tap((ids) =>  this.seatsIds = ids),\n        tap(() => {\n          this.getCostBreakdown();\n        })\n      )\n      .subscribe();\n  }\n\n  getCostBreakdown() {\n    this._getCostBreakdown.execute({\n      passengers: this.seatsIds.map((id) => {\n        return { seatId: id };\n      }),\n      userId: null,\n    });\n    this._getCostBreakdown.constBreadown$().pipe(\n      tap((costBreakdown) => {\n        if (costBreakdown) {\n          this.updatePriceDetails(costBreakdown); \n        } else {\n          console.error('No cost breakdown found in state');\n        }\n      })\n    ).subscribe()\n  }\n  updatePriceDetails(costBreakdown: ICostBreakdown) {\n    this.priceDetails = [\n      { label: 'Ticket Price', amount: costBreakdown.ticketPrice },\n      { label: 'Airport Tax', amount: costBreakdown.airportTax },\n      { label: 'Booking Fee', amount: costBreakdown.bookingFee },\n      { label: 'Fuel Insurance', amount: costBreakdown.fuelInsurance },\n      { label: 'Additional Charges', amount: costBreakdown.additionalCharges },\n      { label: 'Discount', amount: costBreakdown.discount },\n    ];\n    this.totalPrice = costBreakdown.totalAmount;\n  }\n}\n","<h1  class=\"title-h1\">Price Breakdown</h1>\n<lib-price-breakdown-card\n  [totalPrice]=\"totalPrice\"\n  [currency]=\"currency\"\n  [details]=\"priceDetails\"\n></lib-price-breakdown-card>\n","import { Component, input } from '@angular/core';\nimport { FlightSegment } from '../resume-card/resume-card.component';\n\n@Component({\n  selector: 'lib-flight-detail',\n  imports: [],\n  templateUrl: './flight-detail.component.html',\n  styleUrl: './flight-detail.component.scss'\n})\nexport class FlightDetailComponent {\n\n  segmentLabel = input<string>('');\n  date = input<string>('');\n  flight = input<FlightSegment>({ origin: '', originTime: '', destination: '', destinationTime: '' });\n\n}\n","<div class=\"flight-detail\">\n    <div class=\"flight-detail__header\">\n      <span class=\"flight-detail__label\">{{ segmentLabel() }}</span>\n      <span class=\"flight-detail__date\">{{ date() }}</span>\n    </div>\n  \n    <div class=\"flight-detail__times\">\n      <div class=\"flight-detail__time\">\n        <span class=\"flight-detail__airport\">{{ flight().origin }}</span>\n        <span class=\"flight-detail__time-value\">{{ flight().originTime }}</span>\n      </div>\n  \n      <div class=\"flight-detail__arrow\">\n        <hr />\n      </div>\n  \n      <div class=\"flight-detail__time\">\n        <span class=\"flight-detail__airport\">{{ flight().destination }}</span>\n        <span class=\"flight-detail__time-value\">{{ flight().destinationTime }}</span>\n      </div>\n    </div>\n  </div>","import { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'lib-price-row',\n  imports: [],\n  templateUrl: './price-row.component.html',\n  styleUrl: './price-row.component.scss'\n})\nexport class PriceRowComponent {\n  label = input<string>('');\n  price = input<number>(0);\n}\n","<div class=\"price-row\">\n    <span class=\"price-row__label\">{{ label() }}</span>\n    <span class=\"price-row__price\">{{ price() }}</span>\n  </div>","import { Component, input } from '@angular/core';\n\n@Component({\n  selector: 'lib-total-price',\n  imports: [],\n  templateUrl: './total-price.component.html',\n  styleUrl: './total-price.component.scss'\n})\nexport class TotalPriceComponent {\n  totalPrice = input<number>(0);\n\n}\n","<div class=\"total-price\">\n    <span class=\"total-price__label\">Total price:</span>\n    <span class=\"total-price__price\">{{ totalPrice() }} USD</span>\n  </div>","import { Component, computed, input, OnInit, output } from '@angular/core';\nimport { FlightDetailComponent } from '../flight-detail/flight-detail.component';\nimport { PriceRowComponent } from '../price-row/price-row.component';\nimport { TotalPriceComponent } from '../total-price/total-price.component';\nexport interface FlightSegment {\n  origin: string;\n  originTime: string;\n  destination: string;\n  destinationTime: string;\n}\n\n\n@Component({\n  selector: 'lib-resume-card',\n  imports: [FlightDetailComponent, PriceRowComponent, TotalPriceComponent],\n  templateUrl: './resume-card.component.html',\n  styleUrl: './resume-card.component.scss'\n})\nexport class ResumeCardComponent {\n   title  = input<string>('Flight Resume');\n   departureDate = input<string>('');\n   returnDate = input<string>('');\n   outboundFlight = input<FlightSegment>({ origin: '', originTime: '', destination: '', destinationTime: '' });\n   returnFlight = input<FlightSegment>({ origin: '', originTime: '', destination: '', destinationTime: '' });\n   flightPrice   = input<number>(0);\n   adultTicketPrice   = input<number>(0);\n   totalPrice = input<number>(0);\n   disclaimerText = input<string>('');\n   passengers = input<number>(0);\n\n  \n\n  confirmClicked = output<void>();\n\n  onConfirmClick() {\n    this.confirmClicked.emit();\n  }\n\n}\n","<div class=\"flight\">\n  <section class=\"flight__header\">\n    <h2 class=\"flight__title\">{{ title() }}</h2>\n  </section>\n\n  <div class=\"flight__flight-segment\">\n    <lib-flight-detail\n      [segmentLabel]=\"'Go to'\"\n      [date]=\"departureDate()\"\n      [flight]=\"outboundFlight()\"\n    ></lib-flight-detail>\n  </div>\n\n  <div class=\"flight__flight-segment\">\n    <lib-flight-detail\n      [segmentLabel]=\"'Return'\"\n      [date]=\"returnDate()\"\n      [flight]=\"returnFlight()\"\n    ></lib-flight-detail>\n  </div>\n\n  <div class=\"flight__prices\">\n    <lib-price-row label=\"Flights\" [price]=\"flightPrice()\"></lib-price-row>\n    <lib-price-row\n      [label]=\"passengers() + ' ' + 'Adult'\"\n      [price]=\"adultTicketPrice()\"\n    ></lib-price-row>\n  </div>\n\n  <div class=\"flight__total\">\n    <lib-total-price [totalPrice]=\"totalPrice()\"></lib-total-price>\n  </div>\n\n  <div class=\"flight__disclaimer\">\n    <span>{{ disclaimerText() }}</span>\n  </div>\n  <div style=\"padding: 16px\">\n    <button class=\"flight__button\" (click)=\"onConfirmClick()\">Continuar</button>\n  </div>\n</div>\n","import { inject, Injectable } from \"@angular/core\";\nimport { State } from \"../../domain/state\";\nimport { BookingService } from \"../../infrastructure/services/booking.service\";\nimport { Observable, Subscription, tap } from \"rxjs\";\nimport { IBooking, IBookingRequest, IBookingResponse } from \"../../domain/model/booking.model\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateBookingUsecase {\n  private readonly _service = inject(BookingService);\n  private readonly _state = inject(State);\n  private  readonly _router = inject(Router);\n  private subscriptions: Subscription;\n\n  booking$(): Observable<IBookingResponse> {\n    return this._state.booking.booking.$();\n  }\n\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(request: IBookingRequest): void {\n\n    const userId: string   =  localStorage.getItem('id');\n      this.subscriptions.add(\n        this._service\n          .makeBooking({...request, userId})\n          .pipe(\n              tap({\n                  next: (booking) => {\n                      this._state.booking.booking.set(booking);\n                      this._router.navigate(['']);\n\n                  },\n                  error: (error) => {\n                      console.error('Error getting cost breakdown:', error);\n                  }\n              })\n          )\n          .subscribe()\n      );\n    }\n\n}","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { FlightSegment, ResumeCardComponent } from \"../../components/resume-card/resume-card.component\";\nimport { IPassenger, IPassengerContact, PassengerContactUseCase, PassengerSaveUseCase } from 'passenger';\nimport { SelectSeatUseCase } from 'seat-availability';\nimport { GetCostBreakdownUsecase } from '../../../../application/cost/get-cost-brackdown.usecase';\nimport { combineLatest, last, map, Observable, of, switchMap, takeLast, tap } from 'rxjs';\nimport { IBookingRequest, Passenger } from '../../../../domain/model/booking.model';\nimport { GetFlightsSelectedUseCase, GetFlightsUseCase } from 'flight';\nimport { CreateBookingUsecase } from '../../../../application/booking/create-booking.usecase';\nimport { MethodPayUseCase } from 'pay';\n\nexport interface IFlightSummary {\n  title: string;\n  departureDate: string;\n  returnDate: string;\n  outboundFlight: FlightSegment;\n  returnFlight: FlightSegment;\n  flightPrice: number;\n  adultTicketPrice: number;\n  totalPrice: number;\n  disclaimerText: string;\n  passengers: number;\n}\n\n@Component({\n  selector: 'lib-resume-card-container',\n  imports: [ResumeCardComponent],\n  templateUrl: './resume-card-container.component.html'\n})\nexport class ResumeCardContainerComponent implements OnInit, OnDestroy {\n\n  private readonly _passengerSave = inject(PassengerSaveUseCase);\n  private readonly _passengerContact = inject(PassengerContactUseCase);\n  readonly _selectedSeatsUsecase = inject(SelectSeatUseCase);\n  readonly _getCostBreakdown = inject(GetCostBreakdownUsecase);\n  readonly _getFlightSelected = inject(GetFlightsSelectedUseCase);\n  readonly _createBookingUseCase = inject(CreateBookingUsecase);\n  readonly _createPay = inject(MethodPayUseCase);\n\n  public contactSave$: Observable<IPassengerContact>;\n  public listPassengers$: Observable<IPassenger[]>;\n  public selectedSeatsId$: Observable<string[]>;\n  request: IBookingRequest;\n\n  flightSumary: IFlightSummary = {\n    title: 'Flight summary',\n    departureDate: '',\n    returnDate: '',\n    outboundFlight: {\n      origin: '',\n      originTime: '',\n      destination: '',\n      destinationTime: ''\n    },\n    returnFlight: {\n      origin: '',\n      originTime: '',\n      destination: '',\n      destinationTime: ''\n    },\n    flightPrice: 0,\n    adultTicketPrice: 0,\n    totalPrice: 0,\n    disclaimerText: 'Taxes, surcharges and discounts are included in the final price.',\n    passengers: 0\n  };\n\n  onContinue() {\n    this._createBookingUseCase.execute(this.request);\n  }\n\n  ngOnInit(): void {\n    this._passengerSave.initSubscriptions();\n    this._passengerContact.initSubscriptions();\n    this._selectedSeatsUsecase.initSubscriptions();\n    this._getCostBreakdown.initSubscriptions();\n    this._getFlightSelected.initSubscription();\n    this._createPay.initSubscriptions();\n\n    this._createBookingUseCase.initSubscriptions();\n    this.buildBookingRequest();\n  }\n  ngOnDestroy(): void {\n    this._passengerSave.destroySubscriptions();\n    this._passengerContact.destroySubscriptions();\n    this._selectedSeatsUsecase.destroySubscriptions();\n    this._getCostBreakdown.destroySubscriptions();\n    this._getFlightSelected.destroySubscription();\n    this._createBookingUseCase.destroySubscriptions();\n    this._createPay.destroySubscriptions();\n  }\n\n\n\n  buildBookingRequest() {\n\n    const passengers$ = this._passengerSave.getListPassengers$();\n    const seatIds$ = this._selectedSeatsUsecase.selectedSeatsId$();\n    const costBreakdown$ = this._getCostBreakdown.constBreadown$();\n    const contact$ = this._passengerContact.passengerContact$();\n    const flights$ = this._getFlightSelected.flight$();\n    const methodPay$ = this._createPay.getMethodPay$();\n\n\n    combineLatest([passengers$, seatIds$, costBreakdown$, contact$, flights$,  methodPay$]).pipe(\n      switchMap(([passengers, seatIds, costBreakdown,  contact, flight, methodPay]) => {\n        if (\n          !passengers || !seatIds || !costBreakdown || !contact ||\n          !passengers.length || !seatIds.length || !flight || !methodPay\n        ) {\n         \n          return of(null);\n        }\n        const passengersWithSeats: Passenger[] = passengers.map((passenger: IPassenger, index: number) => ({\n          passengerTitle: passenger?.treatment,\n          passengerName: passenger?.name,\n          passengerLastName: passenger?.lastName,\n          passengerType: 'ADULT',\n          seatId: seatIds[index] || null, \n        }));\n        this.flightSumary = {\n          title: 'Flight summary',\n          departureDate: flight?.origin.departure,\n          returnDate: flight?.origin.arrival,\n          outboundFlight: {\n            origin: flight?.origin.origin,\n            originTime: flight?.origin.departure,\n            destination: flight?.origin.destination,\n            destinationTime: flight?.origin.arrival\n          },\n          returnFlight: {\n            origin: flight?.destination.origin,\n            originTime: flight?.destination.departure,\n            destination: flight?.destination.destination,\n            destinationTime: flight?.destination.arrival\n          },\n          flightPrice: costBreakdown?.totalAmount,\n          adultTicketPrice: costBreakdown?.ticketPrice,\n          totalPrice: costBreakdown?.totalAmount,\n          disclaimerText: 'Taxes, surcharges and discounts are included in the final price.',\n          passengers: passengersWithSeats.length\n        };\n\n       \n  \n        const request: IBookingRequest = {\n          bookingStatus: 'CONFIRMED',\n          bookingPrice: costBreakdown?.ticketPrice,\n          discount: costBreakdown?.discount,\n          flightId: flight?.origin.id, \n          userId: null,\n          paymentMethod: methodPay as any,\n          email: contact?.email,\n          prefix: contact?.prefix,\n          phoneNumber: contact?.telephoneNumber,\n          departureCity: flight?.origin.origin,\n          arrivalCity: flight?.origin.destination,\n          departureDate: flight?.origin.departure,\n          arrivalDate: flight?.origin.arrival,\n          airportTax: costBreakdown?.airportTax,\n          additionalCharges: costBreakdown?.additionalCharges,\n          fuelInsurance: costBreakdown?.fuelInsurance,\n          bookingFee: costBreakdown?.bookingFee,\n          totalAmount: costBreakdown?.totalAmount,\n          ticketPrice: costBreakdown?.ticketPrice,\n          keyNotes: 'Hold you things  pls',\n          passengers: passengersWithSeats\n        };\n  \n        return of(request);\n      }),\n      tap(request => {\n        if (request) {\n\n          this.request = request;\n        }\n      })\n    ).subscribe();\n\n  }\n}\n","<lib-resume-card\n  [title]=\"flightSumary.title\"\n  [departureDate]=\"flightSumary.departureDate\"\n  [returnDate]=\"flightSumary.returnDate\"\n  [outboundFlight]=\"flightSumary.outboundFlight\"\n  [returnFlight]=\"flightSumary.returnFlight\"\n  [flightPrice]=\"flightSumary.flightPrice\"\n  [adultTicketPrice]=\"flightSumary.adultTicketPrice\"\n  [totalPrice]=\"flightSumary.totalPrice\"\n  [passengers]=\"flightSumary.passengers\"\n  [disclaimerText]=\"flightSumary.disclaimerText\"\n  (confirmClicked)=\"onContinue()\"\n>\n</lib-resume-card>\n","import { Component, inject } from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { FlightCardComponent } from \"../../components/flight-card/flight-card.component\";\nimport { FlightCardContainerComponent } from \"../../containers/flight-card-container/flight-card-container.component\";\nimport { PassengerCardContainerComponent } from \"../../containers/passenger-card-container/passenger-card-container.component\";\nimport { PriceBreakdownContainerComponent } from \"../../containers/price-breakdown-container/price-breakdown-container.component\";\nimport { ResumeCardContainerComponent } from \"../../containers/resume-card-container/resume-card-container.component\";\nimport { BookingHeaderService } from \"shared\";\n\n\n@Component({\n  selector: 'lib-booking-resume-layout',\n  imports: [\n    FlightCardContainerComponent,\n    PassengerCardContainerComponent,\n    PriceBreakdownContainerComponent,\n    ResumeCardContainerComponent\n],\n  templateUrl: './booking-resume-layout.component.html',\n  styleUrl: './booking-resume-layout.component.scss',\n})\nexport class BookingResumeLayoutComponent {\n\n  private readonly _bookingHeaderService = inject(BookingHeaderService);\n\n  ngOnInit(): void {\n    this._bookingHeaderService.sendBookingHeader({\n      title: 'Booking',\n      subtitle: 'Make your reservation here'\n    });\n  }\n\n  onDetailsClick() {\n   \n  }\n}\n","<section class=\"booking-resume-layout\">\n  <div class=\"booking-resume-layout__flights\">\n    <lib-flight-card-container></lib-flight-card-container>\n    <lib-passenger-card-container></lib-passenger-card-container>\n    <lib-price-breakdown-container></lib-price-breakdown-container>\n  </div>\n\n  <div class=\"booking-resume-layout__resume\">\n    <lib-resume-card-container></lib-resume-card-container>\n  </div>\n</section>\n","import { Routes } from \"@angular/router\";\nimport { ResumeCardContainerComponent } from \"../containers/resume-card-container/resume-card-container.component\";\nimport { BookingResumeLayoutComponent } from \"../layouts/booking-resume-layout/booking-resume-layout.component\";\nimport { BookingLayoutComponent } from \"shared\";\n\n\n\n\nexport const bookingRoutes: Routes= [\n    {\n        path: '',\n        component:BookingLayoutComponent,\n        children:[\n            {\n                path: '',\n                component: BookingResumeLayoutComponent,\n            }\n        ]\n\n    }\n];","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}