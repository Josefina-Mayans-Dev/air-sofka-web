{"version":3,"file":"admin.mjs","sources":["../../../projects/admin/src/infrastructure/ui/forms/create-flight/create-flight.component.ts","../../../projects/admin/src/infrastructure/ui/forms/create-flight/create-flight.component.html","../../../projects/admin/src/infrastructure/services/get-planes.service.ts","../../../projects/admin/src/domain/state/state.factory.ts","../../../projects/admin/src/domain/state/planes.state.ts","../../../projects/admin/src/domain/state/flights.state.ts","../../../projects/admin/src/domain/state/index.ts","../../../projects/admin/src/application/get.plane.usecase.ts","../../../projects/admin/src/infrastructure/services/create-flight.service.ts","../../../projects/admin/src/application/create.flight.usecase.ts","../../../projects/admin/src/infrastructure/ui/containers/create-flight-container/create-flight-container.component.ts","../../../projects/admin/src/infrastructure/ui/containers/create-flight-container/create-flight-container.component.html","../../../projects/admin/src/infrastructure/ui/layouts/form-layout/form-layout.component.ts","../../../projects/admin/src/infrastructure/ui/layouts/form-layout/form-layout.component.html","../../../projects/admin/src/infrastructure/ui/layouts/admin-layout/admin-layout.component.ts","../../../projects/admin/src/infrastructure/ui/layouts/admin-layout/admin-layout.component.html","../../../projects/admin/src/infrastructure/services/get-flight.service.ts","../../../projects/admin/src/application/get.flight.usecase.ts","../../../projects/admin/src/infrastructure/ui/components/flight-card/flight-card.component.ts","../../../projects/admin/src/infrastructure/ui/components/flight-card/flight-card.component.html","../../../projects/admin/src/infrastructure/ui/components/flights/flights.component.ts","../../../projects/admin/src/infrastructure/ui/components/flights/flights.component.html","../../../projects/admin/src/infrastructure/ui/containers/flights-container/flights-container.component.ts","../../../projects/admin/src/infrastructure/ui/containers/flights-container/flights-container.component.html","../../../projects/admin/src/infrastructure/ui/components/plane-card/plane-card.component.ts","../../../projects/admin/src/infrastructure/ui/components/plane-card/plane-card.component.html","../../../projects/admin/src/infrastructure/ui/components/planes/planes.component.ts","../../../projects/admin/src/infrastructure/ui/components/planes/planes.component.html","../../../projects/admin/src/infrastructure/ui/containers/planes-container/planes-container.component.ts","../../../projects/admin/src/infrastructure/ui/containers/planes-container/planes-container.component.html","../../../projects/admin/src/infrastructure/ui/forms/create-plane/create-plane.component.ts","../../../projects/admin/src/infrastructure/ui/forms/create-plane/create-plane.component.html","../../../projects/admin/src/infrastructure/services/create-plane.service.ts","../../../projects/admin/src/application/create.plane.usecase.ts","../../../projects/admin/src/infrastructure/ui/containers/create-plane-container/create-plane-container.component.ts","../../../projects/admin/src/infrastructure/ui/containers/create-plane-container/create-plane-container.component.html","../../../projects/admin/src/infrastructure/ui/forms/create-maintenance/create-maintenance.component.ts","../../../projects/admin/src/infrastructure/ui/forms/create-maintenance/create-maintenance.component.html","../../../projects/admin/src/infrastructure/services/create-maintenance.service.ts","../../../projects/admin/src/application/create.maintenance.usecase.ts","../../../projects/admin/src/infrastructure/ui/containers/create-maintenance-container/create-maintenance-container.component.ts","../../../projects/admin/src/infrastructure/ui/containers/create-maintenance-container/create-maintenance-container.component.html","../../../projects/admin/src/infrastructure/services/update-flight.service.ts","../../../projects/admin/src/application/update.flight.usecase.ts","../../../projects/admin/src/infrastructure/ui/forms/update-flight/update-flight.component.ts","../../../projects/admin/src/infrastructure/ui/forms/update-flight/update-flight.component.html","../../../projects/admin/src/infrastructure/ui/containers/update-flight-container/update-flight-container.component.ts","../../../projects/admin/src/infrastructure/ui/containers/update-flight-container/update-flight-container.component.html","../../../projects/admin/src/infrastructure/ui/routes/admin.routes.ts","../../../projects/admin/src/public-api.ts","../../../projects/admin/src/admin.ts"],"sourcesContent":["import {\n  Component,\n  computed,\n  inject,\n  input,\n  output,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { ButtonComponent, IButton, IInput, InputComponent } from 'shared';\nimport { IPlane } from '../../../../domain/model/plane';\nimport { FlightRequest } from '../../../../domain/model/flight.request';\n\n@Component({\n  selector: 'lib-create-flight',\n  imports: [ReactiveFormsModule, InputComponent, ButtonComponent],\n  templateUrl: './create-flight.component.html',\n  styleUrl: './create-flight.component.scss',\n})\nexport class CreateFlightComponent {\n  private fb = inject(FormBuilder);\n\n  planes = input<IPlane[]>([]);\n  onSubmit = output<FlightRequest>();\n\n  originInput: IInput = {\n    id: 'origin',\n    label: 'Origin',\n    placeholder: '',\n    value: '',\n    type: 'text',\n    formControlName: 'origin',\n    required: true,\n    disabled: false,\n  };\n\n  destinationInput: IInput = {\n    id: 'destination',\n    label: 'Destination',\n    placeholder: '',\n    value: '',\n    type: 'text',\n    formControlName: 'destination',\n    required: true,\n    disabled: false,\n  };\n\n  priceInput: IInput = {\n    id: 'price',\n    label: 'Price',\n    placeholder: '',\n    value: '',\n    type: 'number',\n    formControlName: 'price',\n    required: true,\n    disabled: false,\n  };\n\n  departureInput: IInput = {\n    id: 'departure',\n    label: 'Departure',\n    placeholder: '',\n    value: '',\n    type: 'datetime-local',\n    formControlName: 'departure',\n    required: true,\n    disabled: false,\n  };\n\n  arrivalInput: IInput = {\n    id: 'arrival',\n    label: 'Arrival',\n    placeholder: '',\n    value: '',\n    type: 'datetime-local',\n    formControlName: 'arrival',\n    required: true,\n    disabled: false,\n  };\n\n  form: FormGroup = this.fb.group({\n    origin: ['', [Validators.required]],\n    destination: ['', [Validators.required]],\n    price: ['', [Validators.required]],\n    plane: ['', [Validators.required]],\n    departure: ['', [Validators.required]],\n    arrival: ['', [Validators.required]],\n  });\n\n  submitButtonData: IButton = {\n    class: 'dark',\n    size: 'large',\n    label: 'Create',\n    disabled: true,\n  };\n\n  validateForm() {\n    this.submitButtonData.disabled = this.form.invalid;\n  }\n\n  submit() {\n    this.onSubmit.emit({\n      origin: this.form.get('origin')!.value,\n      destination: this.form.get('destination')!.value,\n      price: this.form.get('price')!.value,\n      idPlane: this.form.get('plane')!.value,\n      departure: this.form.get('departure')!.value,\n      arrival: this.form.get('arrival')!.value,\n    });\n  }\n}\n","<form [formGroup]=\"form\" class=\"form\">\n  <div>\n    <app-input\n      [inputData]=\"originInput\"\n      [formGroup]=\"form\"\n      (outputData)=\"validateForm()\"\n    ></app-input>\n  </div>\n\n  <div>\n    <app-input\n      [inputData]=\"destinationInput\"\n      [formGroup]=\"form\"\n      (outputData)=\"validateForm()\"\n    ></app-input>\n  </div>\n\n  <div>\n    <app-input\n      [inputData]=\"priceInput\"\n      [formGroup]=\"form\"\n      (outputData)=\"validateForm()\"\n    ></app-input>\n  </div>\n\n  <div class=\"form__group\">\n    <label for=\"plane\" class=\"form__label\">Plane</label>\n    <select\n      name=\"plane\"\n      id=\"plane\"\n      required\n      (change)=\"validateForm()\"\n      formControlName=\"plane\"\n      class=\"form__select\"\n    >\n      <option value=\"\" disabled selected>Select a plane</option>\n      @for (plane of planes(); track $index) {\n      <option [value]=\"plane.id\">{{ plane.model }}</option>\n      }\n    </select>\n  </div>\n\n  <div>\n    <app-input\n      [inputData]=\"departureInput\"\n      [formGroup]=\"form\"\n      (outputData)=\"validateForm()\"\n    ></app-input>\n  </div>\n\n  <div>\n    <app-input\n      [inputData]=\"arrivalInput\"\n      [formGroup]=\"form\"\n      (outputData)=\"validateForm()\"\n    ></app-input>\n  </div>\n\n  <app-button\n    [buttonData]=\"submitButtonData\"\n    (clickEvent)=\"submit()\"\n  ></app-button>\n</form>\n","import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IPlane } from '../../domain/model/plane';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetPlanesService {\n  private readonly http = inject(HttpClient);\n\n  get(): Observable<IPlane[]> {\n    return this.http.get<IPlane[]>(`http://localhost:8080/planes`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { IState } from '../model/state.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateFactory {\n  state<T>(subject$: BehaviorSubject<T>): IState<T> {\n    return {\n      $: () => subject$.asObservable(),\n      snapshot: () => this.inmutabilize(subject$.getValue()),\n      set: (value: T) => subject$.next(this.inmutabilize(value)),\n    };\n  }\n\n  private inmutabilize<T>(value: T): T {\n    return JSON.parse(JSON.stringify(value));\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { StateFactory } from './state.factory';\nimport { BehaviorSubject } from 'rxjs';\nimport { IPlane } from '../model/plane';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlanesState {\n  private readonly _factory = inject(StateFactory);\n\n  private readonly _planes$ = new BehaviorSubject<IPlane[]>([]);\n\n  store() {\n    return this._factory.state(this._planes$);\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { StateFactory } from './state.factory';\nimport { BehaviorSubject } from 'rxjs';\nimport { IFlight } from '../model/flight';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FlightsState {\n  private readonly _factory = inject(StateFactory);\n\n  private readonly _flights$ = new BehaviorSubject<IFlight[]>([]);\n\n  store() {\n    return this._factory.state(this._flights$);\n  }\n}","import { inject, Injectable } from '@angular/core';\nimport { PlanesState } from './planes.state';\nimport { FlightsState } from './flights.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class State {\n  private readonly _planes = inject(PlanesState);\n  private readonly _flights = inject(FlightsState);\n\n\n  get planes() {\n    return this._planes.store();\n  }\n\n  get flights() {\n    return this._flights.store();\n  }\n}","import { inject, Injectable } from '@angular/core';\nimport { GetPlanesService } from '../infrastructure/services/get-planes.service';\nimport { State } from '../domain/state';\nimport { Observable, Subscription, tap } from 'rxjs';\nimport { IPlane } from '../domain/model/plane';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetPlanesUseCase {\n  private readonly _service = inject(GetPlanesService);\n  private readonly _state = inject(State);\n\n  private subscriptions!: Subscription;\n\n  planes$(): Observable<IPlane[]> {\n    return this._state.planes.$();\n  }\n\n  initSubscription(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscription(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute() {\n    this.subscriptions.add(\n      this._service\n        .get()\n        .pipe(\n          tap((planes) => {\n            this._state.planes.set(planes);\n          })\n        )\n        .subscribe({})\n    );\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { FlightRequest } from '../../domain/model/flight.request';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { IFlight } from '../../domain/model/flight';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateFlightService {\n  private readonly http = inject(HttpClient);\n\n  create(request: FlightRequest): Observable<IFlight> {\n    return this.http.post<IFlight>('http://localhost:8080/flights', request);\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { CreateFlightService } from '../infrastructure/services/create-flight.service';\nimport { State } from '../domain/state';\nimport { delay, finalize, Observable, Subscription, tap } from 'rxjs';\nimport { FlightRequest } from '../domain/model/flight.request';\nimport { Router } from '@angular/router';\nimport { IFlight } from '../domain/model/flight';\nimport { LoadingService } from 'shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateFlightUseCase {\n  private readonly _service = inject(CreateFlightService);\n  private readonly _state = inject(State);\n  private readonly _router = inject(Router);\n  private readonly _loading = inject(LoadingService);\n  private subscriptions!: Subscription;\n\n  flights$(): Observable<IFlight[]> {\n    return this._state.flights.$();\n  }\n\n  initSubscription(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscription(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(request: FlightRequest): void {\n    this._loading.setLoading(true);\n    this.subscriptions.add(\n      this._service\n        .create(request)\n        .pipe(\n          delay(2000),\n          finalize(() => this._loading.setLoading(false)),\n          tap((flight: any) => {\n            this._state.flights.set([\n              ...this._state.flights.snapshot(),\n              flight,\n            ]);\n          })\n        )\n        .subscribe({\n          next: () => {\n            this._router.navigate(['/admin']);\n          },\n        })\n    );\n  }\n}\n","import { Component, inject, OnInit } from '@angular/core';\nimport { CreateFlightComponent } from '../../forms/create-flight/create-flight.component';\nimport { GetPlanesUseCase } from '../../../../application/get.plane.usecase';\nimport { IPlane } from '../../../../domain/model/plane';\nimport { FlightRequest } from '../../../../domain/model/flight.request';\nimport { CreateFlightUseCase } from '../../../../application/create.flight.usecase';\n\n@Component({\n  selector: 'lib-create-flight-container',\n  imports: [CreateFlightComponent],\n  templateUrl: './create-flight-container.component.html',\n})\nexport class CreateFlightContainerComponent implements OnInit {\n  private readonly _planesUseCase = inject(GetPlanesUseCase);\n  private readonly _flightUseCase = inject(CreateFlightUseCase);\n  planes: IPlane[] = [];\n\n  ngOnInit(): void {\n    this._planesUseCase.initSubscription();\n    this._flightUseCase.initSubscription();\n    this.getPlanes();\n\n    this._planesUseCase.planes$().subscribe({\n      next: (response) => {\n        this.planes = response;\n      },\n    });\n  }\n\n  getPlanes(): void {\n    this._planesUseCase.execute();\n  }\n\n  createFlight(request: FlightRequest): void {\n    this._flightUseCase.execute(request);\n  }\n}\n","<lib-create-flight [planes]=\"planes\" (onSubmit)=\"createFlight($event)\" />\n","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { LoadingComponent } from 'shared';\n\n@Component({\n  selector: 'lib-form-layout',\n  imports: [RouterOutlet, LoadingComponent],\n  templateUrl: './form-layout.component.html',\n  styleUrl: './form-layout.component.scss'\n})\nexport class FormLayoutComponent {\n\n}\n","<main class=\"main\">\n  <div class=\"main__container\">\n    <router-outlet></router-outlet>\n  </div>\n</main>\n<lib-loading></lib-loading>\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  NavigationEnd,\n  Router,\n  RouterLink,\n  RouterOutlet\n} from '@angular/router';\nimport { filter, Subject, takeUntil } from 'rxjs';\nimport { LoadingComponent } from 'shared';\n\n@Component({\n  selector: 'lib-admin-layout',\n  imports: [RouterOutlet, RouterLink, LoadingComponent],\n  templateUrl: './admin-layout.component.html',\n  styleUrl: './admin-layout.component.scss',\n})\nexport class AdminLayoutComponent implements OnInit, OnDestroy {\n  private readonly router = inject(Router);\n  private readonly destroy$ = new Subject<void>();\n\n  isPlanes: boolean = false;\n  ngOnInit(): void {\n    this.isPlanes = this.router.url.includes('planes');\n\n    this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationEnd),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        this.isPlanes = this.router.url.includes('planes');\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<header class=\"header\">\n  <a [routerLink]=\"['/']\" class=\"header__button--secondary header__button\"\n    >Go home</a\n  >\n  @if (!isPlanes) {\n  <div class=\"header__links\">\n    <a\n      [routerLink]=\"['/admin/planes']\"\n      class=\"header__button--main header__button\"\n      >View planes</a\n    >\n    <a\n      [routerLink]=\"['/admin/create']\"\n      class=\"header__button--main header__button\"\n      >Create flight</a\n    >\n  </div>\n  } @else {\n  <div class=\"header__links\">\n    <a [routerLink]=\"['/admin']\" class=\"header__button--main header__button\"\n      >View flights</a\n    >\n    <a\n      [routerLink]=\"['/admin/create/planes']\"\n      class=\"header__button--main header__button\"\n      >Create plane</a\n    >\n    <a\n      [routerLink]=\"['/admin/create/maintenances']\"\n      class=\"header__button--main header__button\"\n      >Create maintenance</a\n    >\n  </div>\n  }\n</header>\n<main class=\"main\">\n  <router-outlet></router-outlet>\n</main>\n<lib-loading></lib-loading>\n","import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { IFlight } from '../../domain/model/flight';\nimport { map, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetFlightsService {\n  private readonly http = inject(HttpClient);\n\n  get(): Observable<IFlight[]> {\n    return this.http.get<IFlight[]>(`http://localhost:8080/flights`);\n  }\n\n  getById(id: string): Observable<IFlight> {\n    return this.get().pipe(\n      map((flights: IFlight[]) => flights.find(flight => flight.id === id))\n    );\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { GetFlightsService } from '../infrastructure/services/get-flight.service';\nimport { State } from '../domain/state';\nimport { finalize, Observable, Subscription, tap } from 'rxjs';\nimport { IFlight } from '../domain/model/flight';\nimport { LoadingService } from 'shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GetFlightsUseCase {\n  private readonly _service = inject(GetFlightsService);\n  private readonly _state = inject(State);\nprivate readonly _loading = inject(LoadingService);\n  private subscriptions!: Subscription;\n\n  flights$(): Observable<IFlight[]> {\n    return this._state.flights.$();\n  }\n\n  initSubscription(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscription(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute() {\n    this._loading.setLoading(true);\n    this.subscriptions.add(\n      this._service\n        .get()\n        .pipe(finalize(() => this._loading.setLoading(false)))\n        .pipe(\n          tap((flights) => {\n            this._state.flights.set(flights);\n          })\n        )\n        .subscribe({})\n    );\n  }\n}\n","import { Component, EventEmitter, input, Output } from '@angular/core';\nimport { IFlight } from '../../../../domain/model/flight';\nimport { CurrencyPipe, DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-flight-card',\n  imports: [DatePipe, CurrencyPipe],\n  templateUrl: './flight-card.component.html',\n  styleUrl: './flight-card.component.scss',\n})\nexport class FlightCardComponent {\n  flight = input.required<IFlight>();\n  @Output() edit = new EventEmitter<IFlight>();\n\n  constructor(private router: Router) {}\n\n  onEdit() {\n    const flight = this.flight();\n    if (flight) {\n      this.edit.emit(flight);\n      console.log('Edit flight', flight);\n      // Navegar a la ruta de actualización con el ID del vuelo\n      this.router.navigate(['/admin/update/flight', flight.id]); // Navegar con /admin/update/flight/:id\n    }\n  }\n  \n}\n","<div class=\"card\">\n  <img src=\"assets/svgs/flight.svg\" alt=\"Flight\">\n  <div class=\"card__details\">\n    <div class=\"card__details__item\">\n      <span class=\"card__details__item--label\">Origin:</span>\n      <span>{{ flight().origin }}</span>\n    </div>\n\n    <div class=\"card__details__item\">\n      <span class=\"card__details__item--label\">Destination:</span>\n      <span>{{ flight().destination }}</span>\n    </div>\n\n    <div class=\"card__details__item\">\n      <span class=\"card__details__item--label\">Departure:</span>\n      <span>{{ flight().departure | date : \"short\" }}</span>\n    </div>\n\n    <div class=\"card__details__item\">\n      <span class=\"card__details__item--label\">Arrival:</span>\n      <span>{{ flight().arrival | date : \"short\" }}</span>\n    </div>\n\n    <div class=\"card__details__item\">\n      <span class=\"card__details__item--label\">Price:</span>\n      <span>{{ flight().price | currency : \"USD\" : \"symbol\" : \"1.0-2\"}}</span>\n    </div>\n\n    <!-- Botón de edición -->\n    <button class=\"card__details__edit-button\" (click)=\"onEdit()\">Edit</button>\n  </div>\n</div>","import { Component, input } from '@angular/core';\nimport { IFlight } from '../../../../domain/model/flight';\nimport { FlightCardComponent } from '../flight-card/flight-card.component';\n\n@Component({\n  selector: 'lib-flights',\n  imports: [FlightCardComponent],\n  templateUrl: './flights.component.html',\n  styleUrl: './flights.component.scss',\n})\nexport class FlightsComponent {\n  flights = input<IFlight[]>();\n}\n","<div class=\"flights\">\n  @for (flight of flights(); track $index) {\n  <lib-flight-card [flight]=\"flight\"></lib-flight-card>\n  }\n</div>\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { GetFlightsUseCase } from '../../../../application/get.flight.usecase';\nimport { IFlight } from '../../../../domain/model/flight';\nimport { FlightsComponent } from '../../components/flights/flights.component';\n\n@Component({\n  selector: 'lib-flights-container',\n  imports: [FlightsComponent],\n  templateUrl: './flights-container.component.html',\n})\nexport class FlightsContainerComponent implements OnInit, OnDestroy {\n  private readonly _useCase = inject(GetFlightsUseCase);\n  flights: IFlight[] = [];\n\n  ngOnInit(): void {\n    this._useCase.initSubscription();\n    this.getFlights();\n\n    this._useCase.flights$().subscribe({\n      next: (response) => (this.flights = response),\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._useCase.destroySubscription();\n  }\n\n  getFlights() {\n    this._useCase.execute();\n  }\n}\n","<lib-flights [flights]=\"flights\"></lib-flights>\n","import { Component, input } from '@angular/core';\nimport { IPlane } from '../../../../domain/model/plane';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lib-plane-card',\n  imports: [CommonModule],\n  templateUrl: './plane-card.component.html',\n  styleUrl: './plane-card.component.scss',\n})\nexport class PlaneCardComponent {\n  plane = input<IPlane>();\n}\n","<div class=\"card\">\n  <img src=\"assets/svgs/airplane.svg\" alt=\"Airplane\">\n  <div class=\"card__details\">\n    <div class=\"card__details__item\">\n      <span class=\"card__details__item--label\">Model:</span>\n      <span>{{ plane().model }}</span>\n    </div>\n    <div class=\"card__details__item\">\n      <span class=\"card__details__item--label\">State:</span>\n      <span\n        [ngClass]=\"\n          plane().state === 'DISABLED'\n            ? 'card__details__item--disabled'\n            : 'card__details__item--enabled'\n        \"\n        >{{ plane().state }}</span\n      >\n    </div>\n  </div>\n</div>\n","import { Component, input } from '@angular/core';\nimport { IPlane } from '../../../../domain/model/plane';\nimport { PlaneCardComponent } from '../plane-card/plane-card.component';\n\n@Component({\n  selector: 'lib-planes',\n  imports: [PlaneCardComponent],\n  templateUrl: './planes.component.html',\n  styleUrl: './planes.component.scss',\n})\nexport class PlanesComponent {\n  planes = input<IPlane[]>();\n}\n","<div class=\"planes\">\n    @for (plane of planes(); track $index) {\n        <lib-plane-card [plane]=\"plane\"></lib-plane-card>\n    }\n</div>\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { PlanesComponent } from '../../components/planes/planes.component';\nimport { GetPlanesUseCase } from '../../../../application/get.plane.usecase';\nimport { IPlane } from '../../../../domain/model/plane';\n\n@Component({\n  selector: 'lib-planes-container',\n  imports: [PlanesComponent],\n  templateUrl: './planes-container.component.html',\n})\nexport class PlanesContainerComponent implements OnInit, OnDestroy {\n  private readonly _useCase = inject(GetPlanesUseCase);\n  planes: IPlane[] = [];\n\n  ngOnInit(): void {\n    this._useCase.initSubscription();\n    this.getPlanes();\n\n    this._useCase.planes$().subscribe({\n      next: (response) => (this.planes = response),\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._useCase.destroySubscription();\n  }\n\n  getPlanes() {\n    this._useCase.execute();\n  }\n}\n","<lib-planes [planes]=\"planes\"></lib-planes>\n","import { Component, inject, output } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { PlaneRequest } from '../../../../domain/model/plane.request';\nimport { ButtonComponent, IButton, IInput, InputComponent } from 'shared';\n\n@Component({\n  selector: 'lib-create-plane',\n  imports: [ReactiveFormsModule, InputComponent, ButtonComponent],\n  templateUrl: './create-plane.component.html',\n  styleUrl: './create-plane.component.scss',\n})\nexport class CreatePlaneComponent {\n  private fb = inject(FormBuilder);\n  onSubmit = output<PlaneRequest>();\n\n  modelInput: IInput = {\n    id: 'model',\n    label: 'Model',\n    placeholder: '',\n    value: '',\n    type: 'text',\n    formControlName: 'model',\n    required: true,\n    disabled: false,\n  };\n\n  form: FormGroup = this.fb.group({\n    model: ['', [Validators.required]],\n  });\n\n  submitButtonData: IButton = {\n    class: 'dark',\n    size: 'large',\n    label: 'Create',\n    disabled: true,\n  };\n\n  validateForm() {\n    this.submitButtonData.disabled = this.form.invalid;\n  }\n\n  submit() {\n    this.onSubmit.emit({\n      model: this.form.get('model')!.value,\n    });\n  }\n}\n","<form [formGroup]=\"form\" class=\"form\">\n  <div>\n    <app-input\n      [inputData]=\"modelInput\"\n      [formGroup]=\"form\"\n      (outputData)=\"validateForm()\"\n    ></app-input>\n  </div>\n  <app-button\n    [buttonData]=\"submitButtonData\"\n    (clickEvent)=\"submit()\"\n  ></app-button>\n</form>\n","import { inject, Injectable } from '@angular/core';\nimport { FlightRequest } from '../../domain/model/flight.request';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { IFlight } from '../../domain/model/flight';\nimport { PlaneRequest } from '../../domain/model/plane.request';\nimport { IPlane } from '../../domain/model/plane';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreatePlaneService {\n  private readonly http = inject(HttpClient);\n\n  create(request: PlaneRequest): Observable<IPlane> {\n    return this.http.post<IPlane>('http://localhost:8080/planes', request);\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { CreateFlightService } from '../infrastructure/services/create-flight.service';\nimport { State } from '../domain/state';\nimport { finalize, Observable, Subscription, tap } from 'rxjs';\nimport { FlightRequest } from '../domain/model/flight.request';\nimport { Router } from '@angular/router';\nimport { IFlight } from '../domain/model/flight';\nimport { LoadingService } from 'shared';\nimport { IPlane } from '../domain/model/plane';\nimport { PlaneRequest } from '../domain/model/plane.request';\nimport { CreatePlaneService } from '../infrastructure/services/create-plane.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreatePlaneUseCase {\n  private readonly _service = inject(CreatePlaneService);\n  private readonly _state = inject(State);\n  private readonly _router = inject(Router);\n  private readonly _loading = inject(LoadingService);\n  private subscriptions!: Subscription;\n\n  planes$(): Observable<IPlane[]> {\n    return this._state.planes.$();\n  }\n\n  initSubscription(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscription(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(request: PlaneRequest): void {\n    this._loading.setLoading(true);\n    this.subscriptions.add(\n      this._service\n        .create(request)\n        .pipe(finalize(() => this._loading.setLoading(false)))\n        .pipe(\n          tap((Plane) => {\n            this._state.planes.set([...this._state.planes.snapshot(), Plane]);\n          })\n        )\n        .subscribe({\n          next: () => {\n            this._router.navigate(['/admin/planes']);\n          },\n        })\n    );\n  }\n}\n","import { Component, inject } from '@angular/core';\nimport { CreatePlaneComponent } from '../../forms/create-plane/create-plane.component';\nimport { CreatePlaneUseCase } from '../../../../application/create.plane.usecase';\nimport { PlaneRequest } from '../../../../domain/model/plane.request';\nimport { IPlane } from '../../../../domain/model/plane';\n\n@Component({\n  selector: 'lib-create-plane-container',\n  imports: [CreatePlaneComponent],\n  templateUrl: './create-plane-container.component.html',\n})\nexport class CreatePlaneContainerComponent {\n  private readonly _useCase = inject(CreatePlaneUseCase);\n  planes: IPlane[] = [];\n\n  ngOnInit(): void {\n    this._useCase.initSubscription();\n\n    this._useCase.planes$().subscribe({\n      next: (response) => {\n        this.planes = response;\n      },\n    });\n  }\n\n  createPlane(request: PlaneRequest): void {\n    this._useCase.execute(request);\n  }\n}\n","<lib-create-plane (onSubmit)=\"createPlane($event)\"></lib-create-plane>\n","import { Component, inject, input, output } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { ButtonComponent, IButton, IInput, InputComponent } from 'shared';\nimport { IPlane } from '../../../../domain/model/plane';\nimport { MaintenanceRequest } from '../../../../domain/model/maintenance.request';\n\n@Component({\n  selector: 'lib-create-maintenance',\n  imports: [ReactiveFormsModule, ButtonComponent, InputComponent],\n  templateUrl: './create-maintenance.component.html',\n  styleUrl: './create-maintenance.component.scss',\n})\nexport class CreateMaintenanceComponent {\n  private fb = inject(FormBuilder);\n  planes = input<IPlane[]>([]);\n\n  onSubmit = output<MaintenanceRequest>();\n\n  startInput: IInput = {\n    id: 'start',\n    label: 'Start',\n    placeholder: '',\n    value: '',\n    type: 'datetime-local',\n    formControlName: 'start',\n    required: true,\n    disabled: false,\n  };\n\n  endInput: IInput = {\n    id: 'end',\n    label: 'End',\n    placeholder: '',\n    value: '',\n    type: 'datetime-local',\n    formControlName: 'end',\n    required: true,\n    disabled: false,\n  };\n\n  form: FormGroup = this.fb.group({\n    plane: ['', [Validators.required]],\n    start: ['', [Validators.required]],\n    end: ['', [Validators.required]],\n  });\n\n  submitButtonData: IButton = {\n    class: 'dark',\n    size: 'large',\n    label: 'Create',\n    disabled: true,\n  };\n\n  validateForm() {\n    this.submitButtonData.disabled = this.form.invalid;\n  }\n\n  submit() {\n    this.onSubmit.emit({\n      idPlane: this.form.get('plane')!.value,\n      start: this.form.get('start')!.value,\n      end: this.form.get('end')!.value,\n    });\n  }\n}\n","<form [formGroup]=\"form\" class=\"form\">\n  <div class=\"form__group\">\n    <label for=\"plane\" class=\"form__label\">Plane</label>\n    <select\n      name=\"plane\"\n      id=\"plane\"\n      required\n      (change)=\"validateForm()\"\n      formControlName=\"plane\"\n      class=\"form__select\"\n    >\n      <option value=\"\" disabled selected>Select a plane</option>\n      @for (plane of planes(); track $index) {\n      <option [value]=\"plane.id\">{{ plane.model }}</option>\n      }\n    </select>\n  </div>\n\n  <div>\n    <app-input\n      [inputData]=\"startInput\"\n      [formGroup]=\"form\"\n      (outputData)=\"validateForm()\"\n    ></app-input>\n  </div>\n\n  <div>\n    <app-input\n      [inputData]=\"endInput\"\n      [formGroup]=\"form\"\n      (outputData)=\"validateForm()\"\n    ></app-input>\n  </div>\n\n  <app-button\n    [buttonData]=\"submitButtonData\"\n    (clickEvent)=\"submit()\"\n  ></app-button>\n</form>\n","import { inject, Injectable } from '@angular/core';\nimport { FlightRequest } from '../../domain/model/flight.request';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { MaintenanceRequest } from '../../domain/model/maintenance.request';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateMaintenanceService {\n  private readonly http = inject(HttpClient);\n\n  create(request: MaintenanceRequest): Observable<any> {\n    return this.http.post<any>('http://localhost:8080/maintenances', request);\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { finalize, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { LoadingService } from 'shared';\nimport { CreateMaintenanceService } from '../infrastructure/services/create-maintenance.service';\nimport { MaintenanceRequest } from '../domain/model/maintenance.request';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateMaintenanceUseCase {\n  private readonly _service = inject(CreateMaintenanceService);\n  private readonly _router = inject(Router);\n  private readonly _loading = inject(LoadingService);\n  private subscriptions!: Subscription;\n\n  initSubscription(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscription(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(request: MaintenanceRequest): void {\n    this._loading.setLoading(true);\n    this.subscriptions.add(\n      this._service\n        .create(request)\n        .pipe(finalize(() => this._loading.setLoading(false)))\n        .subscribe({\n          next: () => {\n            this._router.navigate(['/admin/planes']);\n          },\n        })\n    );\n  }\n}\n","import { Component, inject } from '@angular/core';\nimport { CreateMaintenanceComponent } from '../../forms/create-maintenance/create-maintenance.component';\nimport { IPlane } from '../../../../domain/model/plane';\nimport { GetPlanesUseCase } from '../../../../application/get.plane.usecase';\nimport { MaintenanceRequest } from '../../../../domain/model/maintenance.request';\nimport { CreateMaintenanceUseCase } from '../../../../application/create.maintenance.usecase';\n\n@Component({\n  selector: 'lib-create-maintenance-container',\n  imports: [CreateMaintenanceComponent],\n  templateUrl: './create-maintenance-container.component.html',\n})\nexport class CreateMaintenanceContainerComponent {\n  private readonly _planesUseCase = inject(GetPlanesUseCase);\n  private readonly _maintenanceUseCase = inject(CreateMaintenanceUseCase);\n  planes: IPlane[] = [];\n\n  ngOnInit(): void {\n    this._planesUseCase.initSubscription();\n    this._maintenanceUseCase.initSubscription();\n    this.getPlanes();\n\n    this._planesUseCase.planes$().subscribe({\n      next: (response) => {\n        this.planes = response;\n      },\n    });\n  }\n\n  getPlanes(): void {\n    this._planesUseCase.execute();\n  }\n\n  createMaintenance(request: MaintenanceRequest): void {\n    this._maintenanceUseCase.execute(request);\n  }\n}\n","<lib-create-maintenance (onSubmit)=\"createMaintenance($event)\" [planes]=\"planes\"></lib-create-maintenance>\n","import { inject, Injectable } from '@angular/core';\nimport { FlightUpdateRequest } from '../../domain/model/flight.update.request';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { IFlight } from '../../domain/model/flight';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UpdateFlightService {\n  private readonly http = inject(HttpClient);\n\n  update(request: FlightUpdateRequest): Observable<IFlight> {\n    return this.http.post<IFlight>('http://localhost:8080/flights/update', request);\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { UpdateFlightService } from '../infrastructure/services/update-flight.service';\nimport { State } from '../domain/state';\nimport { delay, finalize, Observable, Subscription, tap } from 'rxjs';\nimport { FlightUpdateRequest } from '../domain/model/flight.update.request';\nimport { Router } from '@angular/router';\nimport { IFlight } from '../domain/model/flight';\nimport { LoadingService } from 'shared';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UpdateFlightUseCase {\n    private readonly _service = inject(UpdateFlightService);\n    private readonly _state = inject(State);\n    private readonly _router = inject(Router);\n    private readonly _loading = inject(LoadingService);\n    private subscriptions!: Subscription;\n    private _alert = inject(ToastrService);\n\n\n    flights$(): Observable<IFlight[]> {\n        return this._state.flights.$();\n    }\n\n    initSubscription(): void {\n        this.subscriptions = new Subscription();\n    }\n\n    destroySubscription(): void {\n        this.subscriptions.unsubscribe();\n    }\n\n    execute(request: FlightUpdateRequest): void {\n        this._loading.setLoading(true);\n        this.subscriptions.add(\n            this._service\n                .update(request)\n                .pipe(\n                    delay(2000),\n                    finalize(() => this._loading.setLoading(false)),\n                    tap((updatedFlight: IFlight) => {\n                        const currentFlights = this._state.flights.snapshot();\n\n                        // Buscar si el vuelo ya existe, si sí, reemplazarlo\n                        const updatedFlights = currentFlights.map((flight) =>\n                            flight.id === updatedFlight.id ? updatedFlight : flight\n                        );\n\n                        // Si no existe, agregarlo al final del array\n                        const isNewFlight = !currentFlights.some(flight => flight.id === updatedFlight.id);\n                        if (isNewFlight) {\n                            updatedFlights.push(updatedFlight);\n                        }\n\n                        // Actualizar el estado con los vuelos modificados\n                        this._state.flights.set(updatedFlights);\n                    })\n                )\n                .subscribe({\n                    next: () => {\n                        this._alert.success('Flight updated successfully');\n                        this._router.navigate(['/admin']);\n                    },\n                    error: error => {\n                        this._alert.error('Usuario o contraseña incorrectos');\n                    }\n                })\n        );\n    }\n}\n","import {\n  Component,\n  computed,\n  inject,\n  Input,\n  input,\n  OnInit,\n  output,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { ButtonComponent, IButton, IInput, InputComponent } from 'shared';\nimport { IPlane } from '../../../../domain/model/plane';\nimport { IFlight } from '../../../../domain/model/flight';\nimport { FlightUpdateRequest } from '../../../../domain/model/flight.update.request';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-update-flight',\n  imports: [ReactiveFormsModule, InputComponent, ButtonComponent],\n  templateUrl: './update-flight.component.html',\n  styleUrl: './update-flight.component.scss'\n})\nexport class UpdateFlightComponent {\n  private fb = inject(FormBuilder);\n\n  planes = input<IPlane[]>([]);\n  @Input() set flightData(flight: IFlight | null) {\n    if (flight) {\n      this.form.patchValue({\n        ...flight,\n        plane: flight.idPlane, // Asumiendo que el vuelo tiene un objeto plane con id\n      });\n      this.validateForm();\n    }\n  }\n  onSubmit = output<FlightUpdateRequest>();\n\n  idInput: IInput = {\n    id: 'id',\n    label: 'Id',\n    placeholder: '',\n    value: '',\n    type: 'text',\n    formControlName: 'id',\n    required: true,\n    disabled: true,\n  }\n\n  originInput: IInput = {\n    id: 'origin',\n    label: 'Origin',\n    placeholder: '',\n    value: '',\n    type: 'text',\n    formControlName: 'origin',\n    required: true,\n    disabled: false,\n  };\n\n  destinationInput: IInput = {\n    id: 'destination',\n    label: 'Destination',\n    placeholder: '',\n    value: '',\n    type: 'text',\n    formControlName: 'destination',\n    required: true,\n    disabled: false,\n  };\n\n  priceInput: IInput = {\n    id: 'price',\n    label: 'Price',\n    placeholder: '',\n    value: '',\n    type: 'number',\n    formControlName: 'price',\n    required: true,\n    disabled: false,\n  };\n\n  departureInput: IInput = {\n    id: 'departure',\n    label: 'Departure',\n    placeholder: '',\n    value: '',\n    type: 'datetime-local',\n    formControlName: 'departure',\n    required: true,\n    disabled: false,\n  };\n\n  arrivalInput: IInput = {\n    id: 'arrival',\n    label: 'Arrival',\n    placeholder: '',\n    value: '',\n    type: 'datetime-local',\n    formControlName: 'arrival',\n    required: true,\n    disabled: false,\n  };\n\n  form: FormGroup = this.fb.group({\n    id: ['', [Validators.required]],\n    origin: ['', [Validators.required]],\n    destination: ['', [Validators.required]],\n    price: ['', [Validators.required]],\n    plane: ['', [Validators.required]],\n    departure: ['', [Validators.required]],\n    arrival: ['', [Validators.required]],\n  });\n\n  submitButtonData: IButton = {\n    class: 'dark',\n    size: 'large',\n    label: 'Update Flight',\n    disabled: true,\n  };\n\n  validateForm() {\n    this.submitButtonData.disabled = this.form.invalid;\n  }\n\n  submit() {\n    console.log('Flight form submitted:', this.form.value);\n\n    this.onSubmit.emit({\n      id: this.form.get('id')!.value,\n      origin: this.form.get('origin')!.value,\n      destination: this.form.get('destination')!.value,\n      price: this.form.get('price')!.value,\n      idPlane: this.form.get('plane')!.value,\n      departure: this.form.get('departure')!.value,\n      arrival: this.form.get('arrival')!.value,\n    });\n  }\n}\n","<form [formGroup]=\"form\" class=\"form\">\n    <div>\n        <app-input [inputData]=\"idInput\" [formGroup]=\"form\" (outputData)=\"validateForm()\"></app-input>\n    </div>\n\n    <div>\n        <app-input [inputData]=\"originInput\" [formGroup]=\"form\" (outputData)=\"validateForm()\"></app-input>\n    </div>\n\n    <div>\n        <app-input [inputData]=\"destinationInput\" [formGroup]=\"form\" (outputData)=\"validateForm()\"></app-input>\n    </div>\n\n    <div>\n        <app-input [inputData]=\"priceInput\" [formGroup]=\"form\" (outputData)=\"validateForm()\"></app-input>\n    </div>\n\n    <div class=\"form__group\">\n        <label for=\"plane\" class=\"form__label\">Plane</label>\n        <select name=\"plane\" id=\"plane\" required (change)=\"validateForm()\" formControlName=\"plane\" class=\"form__select\">\n            <option value=\"\" disabled selected>Select a plane</option>\n            @for (plane of planes(); track $index) {\n            <option [value]=\"plane.id\">{{ plane.model }}</option>\n            }\n        </select>\n    </div>\n\n    <div>\n        <app-input [inputData]=\"departureInput\" [formGroup]=\"form\" (outputData)=\"validateForm()\"></app-input>\n    </div>\n\n    <div>\n        <app-input [inputData]=\"arrivalInput\" [formGroup]=\"form\" (outputData)=\"validateForm()\"></app-input>\n    </div>\n\n    <app-button [buttonData]=\"submitButtonData\" (clickEvent)=\"submit()\"></app-button>\n</form>","import { Component, inject, Input, OnInit, signal } from '@angular/core';\nimport { GetPlanesUseCase } from '../../../../application/get.plane.usecase';\nimport { IPlane } from '../../../../domain/model/plane';\nimport { UpdateFlightUseCase } from '../../../../application/update.flight.usecase';\nimport { UpdateFlightComponent } from '../../forms/update-flight/update-flight.component';\nimport { FlightUpdateRequest } from '../../../../domain/model/flight.update.request';\nimport { IFlight } from 'flight';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GetFlightsService } from '../../../services/get-flight.service';\n\n@Component({\n  selector: 'lib-update-flight-container',\n  imports: [UpdateFlightComponent],\n  templateUrl: './update-flight-container.component.html',\n})\nexport class UpdateFlightContainerComponent implements OnInit {\n  flight = signal<IFlight | null>(null);\n\n  private readonly _planesUseCase = inject(GetPlanesUseCase);\n  private readonly _flightUseCase = inject(UpdateFlightUseCase);\n  private readonly flightService = inject(GetFlightsService); // Inyecta el servicio\n  private readonly route = inject(ActivatedRoute);\n  private readonly router = inject(Router);\n  planes: IPlane[] = [];\n\n  ngOnInit(): void {\n    const flightId = this.route.snapshot.paramMap.get('id');\n\n    if (flightId) {\n      this.flightService.getById(flightId).subscribe({\n        next: (response) => {\n          this.flight.set(response);\n        },\n      });\n    }\n\n    this._planesUseCase.initSubscription();\n    this._flightUseCase.initSubscription();\n    this.getPlanes();\n\n    this._planesUseCase.planes$().subscribe({\n      next: (response) => {\n        this.planes = response;\n      },\n    });\n  }\n\n  getPlanes(): void {\n    this._planesUseCase.execute();\n  }\n\n  updateFlight(request: FlightUpdateRequest): void {\n    this._flightUseCase.execute(request);\n  }\n}\n","<lib-update-flight [planes]=\"planes\" [flightData]=\"flight()\" (onSubmit)=\"updateFlight($event)\" />","import { Routes } from '@angular/router';\nimport { CreateFlightContainerComponent } from '../containers/create-flight-container/create-flight-container.component';\nimport { FormLayoutComponent } from '../layouts/form-layout/form-layout.component';\nimport { AdminLayoutComponent } from '../layouts/admin-layout/admin-layout.component';\nimport { FlightsContainerComponent } from '../containers/flights-container/flights-container.component';\nimport { PlanesContainerComponent } from '../containers/planes-container/planes-container.component';\nimport { CreatePlaneContainerComponent } from '../containers/create-plane-container/create-plane-container.component';\nimport { CreateMaintenanceContainerComponent } from '../containers/create-maintenance-container/create-maintenance-container.component';\nimport { authGuard } from 'shared';\nimport { UpdateFlightContainerComponent } from '../containers/update-flight-container/update-flight-container.component';\n\nexport const adminRoutes: Routes = [\n  {\n    path: '',\n    component: AdminLayoutComponent,\n    canActivate: [authGuard],\n    children: [\n      {\n        path: '',\n        component: FlightsContainerComponent,\n      },\n      {\n        path: 'planes',\n        component: PlanesContainerComponent,\n      },\n    ],\n  },\n  {\n    path: 'create',\n    component: FormLayoutComponent,\n    canActivate: [authGuard],\n    children: [\n      {\n        path: '',\n        component: CreateFlightContainerComponent,\n      },\n      {\n        path: 'planes',\n        component: CreatePlaneContainerComponent,\n      },\n      {\n        path: 'maintenances',\n        component: CreateMaintenanceContainerComponent,\n      },\n    ],\n  },\n  {\n    path: 'update',\n    component: FormLayoutComponent,\n    canActivate: [authGuard],\n    children: [\n      {\n        path: 'flight/:id',\n        component: UpdateFlightContainerComponent,\n      }\n    ],\n  },\n];\n","/*\n * Public API Surface of admin\n */\n\nexport * from \"./infrastructure/ui/routes/admin.routes\"","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}