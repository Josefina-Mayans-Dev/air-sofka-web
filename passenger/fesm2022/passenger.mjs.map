{"version":3,"file":"passenger.mjs","sources":["../../../projects/passenger/src/infrastructure/ui/components/stepper/stepper.component.ts","../../../projects/passenger/src/infrastructure/ui/components/stepper/stepper.component.html","../../../projects/passenger/src/infrastructure/ui/forms/passenger-form/passenger-form.component.ts","../../../projects/passenger/src/infrastructure/ui/forms/passenger-form/passenger-form.component.html","../../../projects/passenger/src/domain/state/state.factory.ts","../../../projects/passenger/src/domain/state/passenger.state.ts","../../../projects/passenger/src/domain/state/index.ts","../../../projects/passenger/src/application/passenger-contact-save.usecase.ts","../../../projects/passenger/src/application/passenger-save.usecase.ts","../../../projects/passenger/src/application/passenger-update.usecase.ts","../../../projects/passenger/src/infrastructure/ui/containers/passengers/passengers.component.ts","../../../projects/passenger/src/infrastructure/ui/containers/passengers/passengers.component.html","../../../projects/passenger/src/infrastructure/ui/routes/passenger.routes.ts","../../../projects/passenger/src/public-api.ts","../../../projects/passenger/src/passenger.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-stepper',\n  imports: [CommonModule],\n  templateUrl: './stepper.component.html',\n  styleUrl: './stepper.component.scss',\n})\nexport class StepperComponent implements OnInit {\n  @Input() steps: string[] = [];\n  @Input() isNextButtonDisabled: boolean = false;\n  @Output() stepChange = new EventEmitter<number>();\n  @Output() complete = new EventEmitter<any>();\n  @Output() formUpdated = new EventEmitter<any>();\n\n  currentStepIndex: number = 0;\n\n  ngOnInit(): void {}\n\n  goToPreviousStep(): void {\n    if (this.currentStepIndex > 0) {\n      this.currentStepIndex--;\n      this.stepChange.emit(this.currentStepIndex);\n    }\n  }\n\n  goToNextStep(): void {\n    if (this.currentStepIndex < this.steps.length - 1) {\n      this.currentStepIndex++;\n      this.stepChange.emit(this.currentStepIndex);\n    } else {\n      this.complete.emit(); // Emitimos los datos completos\n    }\n  }\n}","<div class=\"stepper\">\n  <div class=\"stepper__steps\">\n    <div class=\"stepper__step\" *ngFor=\"let step of steps; let i = index\" [class.stepper__step--active]=\"i === currentStepIndex\">\n      {{ step }}\n    </div>\n  </div>\n\n  <div class=\"stepper__content\">\n    <ng-content></ng-content>\n  </div>\n\n  <div class=\"stepper__actions\">\n    <button class=\"stepper__button stepper__button--previous\" (click)=\"goToPreviousStep()\" [disabled]=\"currentStepIndex === 0\">\n      Pasajero anterior\n    </button>\n    <button class=\"stepper__button stepper__button--next\" (click)=\"goToNextStep()\" [disabled]=\"isNextButtonDisabled\">\n      {{ currentStepIndex === steps.length - 1 ? 'Completar' : 'Siguiente' }}\n    </button>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { DropdownComponent, IDropdown, IInput, InputComponent } from 'shared';\n\n@Component({\n  selector: 'lib-passenger-form',\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, InputComponent, DropdownComponent],\n  templateUrl: './passenger-form.component.html',\n  styleUrl: './passenger-form.component.scss',\n})\nexport class PassengerFormComponent implements OnInit, OnDestroy {\n  @Input() index: number = 0;\n  @Input() isFirst: boolean = false;\n  @Output() formReady = new EventEmitter<FormGroup>();\n  @Output() formValuesChange = new EventEmitter<{valid: boolean, values?: any}>();\n\n  pasajeroForm!: FormGroup;\n  private formSubscription: Subscription | undefined;\n  dropdowTratamiento: IDropdown = {\n    id: 'tratamiento',\n    label: 'Tratamiento',\n    options: [\n      { label: 'Sr', value: 'Sr.' },\n      { label: 'Sra', value: 'Sra.' }\n    ],\n    formControlName: 'tratamiento'\n  };\n\n  nombreInput: IInput = {\n    id: 'nombre',\n    label: 'Nombre',\n    placeholder: '',\n    value: '',\n    type: 'text',\n    formControlName: 'nombre',\n    required: true,\n    disabled: false,\n  };\n\n  apellidoInput   : IInput = {\n    id: 'apellido',\n    label: 'Apellido',\n    placeholder: '',\n    value: '',\n    type: 'text',\n    formControlName: 'apellido',\n    required: true,\n    disabled: false,\n  };\n\n  correoInput   : IInput = {\n    id: 'correo',\n    label: 'Correo electrónico',\n    placeholder: '',\n    value: '',\n    type: 'email',\n    formControlName: 'correo',\n    required: true,\n    disabled: false,\n  };\n\n  correoConfirmarInput   : IInput = {\n    id: 'correoConfirmar',\n    label: 'Confirmar correo electrónico',\n    placeholder: '',\n    value: '',\n    type: 'email',\n    formControlName: 'correoConfirmar',\n    required: true,\n    disabled: false,\n  };\n\n  numeroTelefonoInput: IInput = {\n    id: 'numeroTelefono',\n    label: 'Número de teléfono',\n    placeholder: '',\n    value: '',\n    type: 'number',\n    formControlName: 'numeroTelefono',\n    required: true,\n    disabled: false,\n  };\n\n  prefijoTelefonoDropdown: IDropdown = {\n    id: 'prefijoTelefono',\n    label: 'Prefijo telefónico del país',\n    options: [\n      { label: 'Ecuador (+593)', value: '+593' },\n      { label: 'España (+34)', value: '+34' },\n      { label: 'Afganistán (+93)', value: '+93' },\n      { label: 'Albania (+355)', value: '+355' }, \n      { label: 'Alemania (+49)', value: '+49' },\n      { label: 'Andorra (+376)', value: '+376' },\n      { label: 'Angola (+244)', value: '+244' },\n      { label: 'Anguila (+1264)', value: '+1264' },\n      { label: 'Bolivia (+591)', value: '+591' },\n      { label: 'Brasil (+55)', value: '+55' },\n      { label: 'Chile (+56)', value: '+56' },\n      { label: 'Colombia (+57)', value: '+57' },\n      { label: 'Perú (+51)', value: '+51' },\n      { label: 'Venezuela (+58)', value: '+58' },\n      { label: 'Argentina (+54)', value: '+54' },\n      { label: 'Uruguay (+598)', value: '+598' },\n    ],\n    formControlName: 'prefijoTelefono'\n  };\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.pasajeroForm = this.fb.group({\n      tratamiento: ['', Validators.required],\n      nombre: ['', Validators.required],\n      apellido: ['', Validators.required],\n      correo: [''],\n      correoConfirmar: [''],\n      prefijoTelefono: [''],\n      numeroTelefono: [''],\n      aceptaTerminos: [false]\n    });\n\n    if (this.isFirst) {\n      this.addContactoValidators();\n    }\n\n    this.formReady.emit(this.pasajeroForm);\n\n    // Emitir los valores cada vez que cambian\n    this.formSubscription = this.pasajeroForm.valueChanges.subscribe(values => {\n      this.pasajeroForm.valid ?\n        this.formValuesChange.emit({valid: true, values: values }):\n        this.formValuesChange.emit({valid: false});\n    });\n  }\n\n  ngOnDestroy() {\n      if (this.formSubscription) {\n          this.formSubscription.unsubscribe();\n      }\n  }\n\n  private addContactoValidators() {\n    this.pasajeroForm.controls['correo'].addValidators([Validators.required, Validators.email]);\n    this.pasajeroForm.controls['correoConfirmar'].addValidators([Validators.required, Validators.email]);\n    this.pasajeroForm.controls['prefijoTelefono'].addValidators(Validators.required);\n    this.pasajeroForm.controls['numeroTelefono'].addValidators([Validators.required, Validators.pattern('^[0-9]{9}$')]);\n    this.pasajeroForm.controls['aceptaTerminos'].addValidators(Validators.requiredTrue);\n\n    this.pasajeroForm.setValidators(this.emailMatchValidator());\n    this.pasajeroForm.updateValueAndValidity();\n  }\n\n  private removeContactoValidators() {\n    this.pasajeroForm.controls['correo'].removeValidators(Validators.required);\n    this.pasajeroForm.controls['correoConfirmar'].removeValidators(Validators.required);\n    this.pasajeroForm.controls['prefijoTelefono'].removeValidators(Validators.required);\n    this.pasajeroForm.controls['numeroTelefono'].removeValidators(Validators.required);\n    this.pasajeroForm.controls['aceptaTerminos'].removeValidators(Validators.required);\n    this.pasajeroForm.controls['aceptaTerminos'].setValue(false); // Si se oculta, se limpia el checkbox\n    this.pasajeroForm.updateValueAndValidity();\n  }\n\n  emailMatchValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.get('correo')?.value;\n      const confirmEmail = control.get('correoConfirmar')?.value;\n  \n      return email && confirmEmail && email !== confirmEmail\n        ? { emailMismatch: true }\n        : null;\n    };\n  }\n}","<form [formGroup]=\"pasajeroForm\" class=\"pasajero-form\">\n  <div class=\"grid\">\n    <div class=\"col-5\">\n      <app-dropdown [dropdownData]=\"dropdowTratamiento\" [formGroup]=\"pasajeroForm\"> </app-dropdown>\n    </div>\n  </div>\n\n  <div class=\"grid\">\n    <div class=\"col-5\">\n      <app-input [inputData]=\"nombreInput\" [formGroup]=\"pasajeroForm\"></app-input>\n    </div>\n  </div>\n\n  <div class=\"grid\">\n    <div class=\"col-5\">\n      <app-input [inputData]=\"apellidoInput\" [formGroup]=\"pasajeroForm\"></app-input>\n    </div>\n  </div>\n\n  @if (isFirst) {\n  <div class=\"pasajero-form__contacto\">\n    <h3 class=\"pasajero-form__contacto-title\">Persona de Contacto</h3>\n\n    <div class=\"grid\">\n      <div class=\"col-5\">\n        <app-input [inputData]=\"correoInput\" [formGroup]=\"pasajeroForm\"></app-input>\n      </div>\n    </div>\n\n    <div class=\"grid\">\n      <div class=\"col-5\">\n        <app-input [inputData]=\"correoConfirmarInput\" [formGroup]=\"pasajeroForm\"></app-input>\n      </div>\n    </div>\n\n    <div class=\"grid\">\n      <div class=\"col-5\">\n        <app-dropdown [dropdownData]=\"prefijoTelefonoDropdown\" [formGroup]=\"pasajeroForm\"> </app-dropdown>\n      </div>\n    </div>\n\n    <div class=\"grid\">\n      <div class=\"col-5\">\n        <app-input [inputData]=\"numeroTelefonoInput\" [formGroup]=\"pasajeroForm\"></app-input>\n      </div>\n    </div>\n\n    <div class=\"form-group terminos-condiciones\">\n      <label class=\"pasajero-form__checkbox-label\">\n        <input type=\"checkbox\" formControlName=\"aceptaTerminos\" />\n        <span>Entiendo y acepto que mis datos personales serán tratados de acuerdo con la política de privacidad de AIR\n          EUROPA.</span>\n        @if(pasajeroForm.get('aceptaTerminos')?.errors && pasajeroForm.get('aceptaTerminos')?.touched) {\n        <div class=\"error-message\">Acepte terminos y condiciones</div>\n        }\n      </label>\n    </div>\n  </div>\n  }\n</form>","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IState } from \"../model/state.model\";\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class StateFactory {\n    state<T>(subject$: BehaviorSubject<T>): IState<T> {\n      return {\n        $: () => subject$.asObservable(),\n        snapshot: () => this.immutabilize(subject$.getValue()),\n        set: (value: T) => subject$.next(this.immutabilize(value)),\n      };\n    }\n  \n    private immutabilize<T>(value: T): T {\n      return JSON.parse(JSON.stringify(value));\n    }\n  }\n  ","import { inject, Injectable } from '@angular/core';\nimport { StateFactory } from './state.factory';\nimport { IPassenger } from '../model/passenger.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { IPassengerContact } from '../model/passenger-contact.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PassengerState {\n  private readonly _factory = inject(StateFactory);\n\n  //#region Subjects\n  private readonly passengerList$ = new BehaviorSubject<IPassenger[]>([]);\n  private readonly passengerContact$ =new BehaviorSubject<IPassengerContact>(null);\n\n  //#endregion\n  store() {\n    return {\n      passengerList: this._factory.state(this.passengerList$),\n      passengerContact: this._factory.state(this.passengerContact$),\n    };\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { PassengerState } from './passenger.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class State {\n  private readonly _passenger = inject(PassengerState);\n  \n  get passenger() {\n    return this._passenger.store();\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { State } from '../domain/state';\nimport { Observable, Subscription } from 'rxjs';\nimport { IPassengerContact } from '../domain/model/passenger-contact.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PassengerContactUseCase {\n  private readonly _state = inject(State);\n  private subscriptions: Subscription;\n\n  //#region Observables\n  passengerContact$(): Observable<IPassengerContact> {\n    return this._state.passenger.passengerContact.$();\n  }\n\n  //#region Public Methods\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(passengerContact: IPassengerContact): void {\n    this.subscriptions.add(\n        this._state.passenger.passengerContact.set(passengerContact)\n    )\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { State } from '../domain/state';\nimport { Observable, Subscription } from 'rxjs';\nimport { IPassenger } from '../domain/model/passenger.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PassengerSaveUseCase {\n  private readonly _state = inject(State);\n  private subscriptions: Subscription;\n\n  //#region Observables\n  getListPassengers$(): Observable<IPassenger[]> {\n    return this._state.passenger.passengerList.$();\n  }\n\n  //#region Public Methods\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(passenger: IPassenger): void {\n    // this.subscriptions.add(\n    //     this._state.passenger.passengerList.set([...this._state.passenger.passengerList.snapshot(), passenger])\n    // )\n    let update=false;\n    let passengerList = this._state.passenger.passengerList\n      .snapshot()\n      .map((p) => {\n        if (p.id === passenger.id) {\n          update=true;\n          return passenger;\n        }\n        return p;\n      });\n\n    if (passengerList.length === 0) {\n      passengerList.push(passenger);\n      this.subscriptions.add(\n        this._state.passenger.passengerList.set([...passengerList])\n      );\n    }else{\n      if(update){\n        this.subscriptions.add(\n          this._state.passenger.passengerList.set([...passengerList])\n        );\n      }else{\n        this.subscriptions.add(\n          this._state.passenger.passengerList.set([...passengerList, passenger])\n        );\n      }\n      \n    }\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { State } from '../domain/state';\nimport { Observable, Subscription } from 'rxjs';\nimport { IPassenger } from '../domain/model/passenger.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PassengerUpdateUseCase {\n  private readonly _state = inject(State);\n  private subscriptions: Subscription;\n\n  //#region Observables\n  getListPassengers$(): Observable<IPassenger[]> {\n    return this._state.passenger.passengerList.$();\n  }\n\n  //#region Public Methods\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(passenger: IPassenger): void {\n    let passengerList = this._state.passenger.passengerList.snapshot()\n        .map(p => {\n            if(p.id === passenger.id) {\n                return passenger;\n            }\n            return p;\n        });\n       \n    this.subscriptions.add(\n        this._state.passenger.passengerList.set([...passengerList])\n    )\n  }\n  \n}\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { StepperComponent } from '../../components/stepper/stepper.component';\nimport { PassengerFormComponent } from '../../forms/passenger-form/passenger-form.component';\nimport { Form, FormGroup } from '@angular/forms';\nimport { PassengerContactUseCase } from '../../../../application/passenger-contact-save.usecase';\nimport { PassengerSaveUseCase } from '../../../../application/passenger-save.usecase';\nimport { PassengerUpdateUseCase } from '../../../../application/passenger-update.usecase';\nimport { Observable, of, switchMap, tap } from 'rxjs';\nimport { IPassenger } from '../../../../domain/model/passenger.model';\nimport { IPassengerContact } from '../../../../domain/model/passenger-contact.model';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { BookingHeaderService } from 'shared';\nimport { GetFlightsSelectedUseCase, GetFlightsUseCase, IFlight, IFlightSelected } from 'flight';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-pasajeros',\n  imports: [AsyncPipe, StepperComponent, PassengerFormComponent, CommonModule],\n  templateUrl: './passengers.component.html',\n})\nexport class PassengersComponent implements OnInit, OnDestroy {\n  private readonly _useCaseContact = inject(PassengerContactUseCase);\n  private readonly _useCasePassengerSave = inject(PassengerSaveUseCase);\n  private readonly _useCasePassengerUpdate = inject(PassengerUpdateUseCase);\n  private readonly _useCaseFlightSelected = inject(GetFlightsSelectedUseCase);\n\n  private headerService = inject(BookingHeaderService);\n  private readonly _router = inject(Router);\n\n  public contactSave$: Observable<IPassengerContact>;\n  public listPassengers$: Observable<IPassenger[]>;\n  public flight$: Observable<IFlightSelected>;\n\n  stepLabels: string[] = [];\n  currentStepIndex: number = 0;\n  formData: any[] = [];\n  passengerForms: FormGroup[] = [];\n  isNextButtonDisabled: boolean = true;\n  contact: IPassengerContact;\n  passenger: IPassenger;\n\n  constructor() {\n    this.headerService.sendBookingHeader({\n      title: 'Pasajeros',\n      subtitle: 'Informacion de contacto y pasajeros',\n    });\n  }\n\n  onFormReady(form: FormGroup, index: number) {\n    this.passengerForms[index] = form;\n    this.checkIfValid(index);\n  }\n\n  onStepChange(index: number) {\n    this.currentStepIndex = index;\n    this.checkIfValid(index);\n  }\n\n  onComplete(data: any[]) {\n    this._router.navigate(['/seats']);\n\n  }\n\n  updateStep(event: any) {\n    this.isNextButtonDisabled = !event.valid;\n\n    if (event.valid && this.currentStepIndex === 0) {\n      this.contact = {\n        email: event.values.correo,\n        confirmEmail: event.values.correoConfirmar,\n        prefix: event.values.prefijoTelefono,\n        telephoneNumber: event.values.numeroTelefono,\n      };\n      this.passenger = {\n        id: this.currentStepIndex,\n        treatment: event.values.tratamiento,\n        name: event.values.nombre,\n        lastName: event.values.apellido,\n      };\n\n      of(this._useCaseContact.execute(this.contact))\n        .pipe(switchMap(() => this.contactSave$))\n        .subscribe();\n\n      of(this._useCasePassengerSave.execute(this.passenger))\n        .pipe(switchMap(() => this.listPassengers$))\n        .subscribe();\n    } else if (event.valid && this.currentStepIndex != 0) {\n      this.passenger = {\n        id: this.currentStepIndex,\n        treatment: event.values.tratamiento,\n        name: event.values.nombre,\n        lastName: event.values.apellido,\n      };\n\n      of(this._useCasePassengerSave.execute(this.passenger))\n        .pipe(switchMap(() => this.listPassengers$))\n        .subscribe();\n    }\n  }\n\n  checkIfValid(index: number) {\n    if (this.passengerForms[index]) {\n      this.isNextButtonDisabled = !this.passengerForms[index].valid;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._useCaseContact.destroySubscriptions();\n    this._useCasePassengerSave.destroySubscriptions();\n    this._useCasePassengerUpdate.destroySubscriptions();\n    this._useCaseFlightSelected.destroySubscription();\n  }\n\n  ngOnInit(): void {\n    this._useCaseContact.initSubscriptions();\n    this._useCasePassengerSave.initSubscriptions();\n    this._useCasePassengerUpdate.initSubscriptions();\n    this._useCaseFlightSelected.initSubscription();\n    this.contactSave$ = this._useCaseContact.passengerContact$();\n    this.listPassengers$ = this._useCasePassengerSave.getListPassengers$();\n    this.flight$ = this._useCaseFlightSelected.flight$();\n    this.flight$.subscribe((flight) => {\n      let passengers = flight.filters?.adults;\n\n      for (let i = 0; i < passengers; i++) {\n        this.stepLabels.push(`Adulto ${i + 1}`);\n      }\n    });\n   \n  }\n}\n","\n   <lib-stepper [steps]=\"stepLabels\" (complete)=\"onComplete($event)\" (stepChange)=\"onStepChange($event)\" [isNextButtonDisabled]=\"isNextButtonDisabled\">\n    @for (step of stepLabels; track $index) {\n          <lib-passenger-form \n          [isFirst]=\"$index === 0\" \n          [hidden]=\"currentStepIndex !== $index\"\n          (formValuesChange)=\"updateStep($event)\" \n          (formReady)=\"onFormReady($event, $index)\"\n        >\n      </lib-passenger-form>\n    }\n  </lib-stepper>\n  <!-- <p>{{contactSave$ | async | json}}</p>\n  <p>{{listPassengers$ | async | json}}</p>\n  <p>{{flight$ | async | json}}</p> -->\n","import { Routes } from \"@angular/router\";\nimport { PassengersComponent } from \"../containers/passengers/passengers.component\";\nimport { BookingLayoutComponent, DefaultLayoutComponent } from \"shared\";\n\nexport const passengerRoutes: Routes = [\n      {\n          path: '',\n          component: BookingLayoutComponent,\n          children: [\n              {\n                  path: '',\n                  component: PassengersComponent\n              }\n          ]\n  \n      }\n  ];\n  ","/*\n * Public API Surface of passenger\n */\n\nexport * from './infrastructure/ui/routes/passenger.routes';\nexport * from  './application/passenger-contact-save.usecase';\nexport * from  './application/passenger-save.usecase';\n\nexport * from './domain/model/passenger.model';\nexport * from './domain/model/passenger-contact.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}