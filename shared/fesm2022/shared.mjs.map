{"version":3,"file":"shared.mjs","sources":["../../../projects/shared/src/infrastructure/environments/environment.ts","../../../projects/shared/src/infrastructure/services/utils/token.service.ts","../../../projects/shared/src/infrastructure/guards/auth.guard.ts","../../../projects/shared/src/infrastructure/services/utils/form.service.ts","../../../projects/shared/src/infrastructure/services/utils/input.service.ts","../../../projects/shared/src/infrastructure/services/utils/login.service.ts","../../../projects/shared/src/infrastructure/services/utils/bookin-header.service.ts","../../../projects/shared/src/infrastructure/services/utils/loading.service.ts","../../../projects/shared/src/infrastructure/interceptors/auth.interceptor.ts","../../../projects/shared/src/infrastructure/ui/components/button/button.component.ts","../../../projects/shared/src/infrastructure/ui/components/button/button.component.html","../../../projects/shared/src/infrastructure/ui/components/input/input.component.ts","../../../projects/shared/src/infrastructure/ui/components/input/input.component.html","../../../projects/shared/src/infrastructure/ui/components/form/form.component.ts","../../../projects/shared/src/infrastructure/ui/components/form/form.component.html","../../../projects/shared/src/infrastructure/ui/forms/login-form/login-form.component.ts","../../../projects/shared/src/infrastructure/ui/forms/login-form/login-form.component.html","../../../projects/shared/src/infrastructure/ui/components/route-flight/route-flight.component.ts","../../../projects/shared/src/infrastructure/ui/components/route-flight/route-flight.component.html","../../../projects/shared/src/infrastructure/ui/components/detail-flight/detail-flight.component.ts","../../../projects/shared/src/infrastructure/ui/components/detail-flight/detail-flight.component.html","../../../projects/shared/src/infrastructure/ui/components/dropdown/dropdown.component.ts","../../../projects/shared/src/infrastructure/ui/components/dropdown/dropdown.component.html","../../../projects/shared/src/infrastructure/ui/components/spinner/spinner.component.ts","../../../projects/shared/src/infrastructure/ui/components/spinner/spinner.component.html","../../../projects/shared/src/infrastructure/ui/components/loading-screen/loading-screen.component.ts","../../../projects/shared/src/infrastructure/ui/components/loading-screen/loading-screen.component.html","../../../projects/shared/src/infrastructure/ui/containers/loading/loading.component.ts","../../../projects/shared/src/infrastructure/ui/containers/loading/loading.component.html","../../../projects/shared/src/infrastructure/ui/layouts/booking-header/booking-header.component.ts","../../../projects/shared/src/infrastructure/ui/layouts/booking-header/booking-header.component.html","../../../projects/shared/src/infrastructure/ui/layouts/booking-layout/booking-layout.component.ts","../../../projects/shared/src/infrastructure/ui/layouts/booking-layout/booking-layout.component.html","../../../projects/shared/src/domain/state/state.factory.ts","../../../projects/shared/src/domain/state/users.state.ts","../../../projects/shared/src/domain/state/index.ts","../../../projects/shared/src/infrastructure/services/api/auth-user.service.ts","../../../projects/shared/src/application/auth-user.usecase.ts","../../../projects/shared/src/infrastructure/ui/containers/login/login.component.ts","../../../projects/shared/src/infrastructure/ui/containers/login/login.component.html","../../../projects/shared/src/infrastructure/ui/layouts/header/header.component.ts","../../../projects/shared/src/infrastructure/ui/layouts/header/header.component.html","../../../projects/shared/src/infrastructure/ui/layouts/default-layout/default-layout.component.ts","../../../projects/shared/src/infrastructure/ui/layouts/default-layout/default-layout.component.html","../../../projects/shared/src/shared.ts"],"sourcesContent":["export enum Environment {\n    'baseApi' = 'http://localhost:8080/api'\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor() { }\n\n  handleToken(token: string): void {\n    localStorage.setItem('access_token', token);\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('access_token');\n  }\n\n  revokeToken(): void {\n    localStorage.clear();\n  }\n\n  isAuthenticated(): boolean {\n    return this.getToken() ? true : false;\n  }\n\n}","import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { TokenService } from '../services/utils/token.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const isAuthenticated = inject(TokenService).isAuthenticated();\n\n  if (isAuthenticated)\n    return true;\n\n  inject(Router).navigateByUrl('');\n  return false;\n  \n};","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n  private formSubject = new Subject<any>();\n  $formData: Observable<any> = this.formSubject.asObservable();\n\n  sendForm(data: any): void {\n    this.formSubject.next(data);\n  }\n}","import { Injectable } from '@angular/core';\nimport { IInput } from '../../ui/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n\n  constructor() { }\n\n  static generateInputData(id: string, label: string, value: string, placeholder: string, type: string, formControlName: string, required: boolean | true, disabled: boolean | false): IInput {\n    return {\n      id: id,\n      label: label,\n      value: value,\n      placeholder: placeholder,\n      type: type,\n      formControlName: formControlName,\n      required: required,\n      disabled: disabled\n    };\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private loginSubject = new Subject<boolean>();\n  $showLogin: Observable<boolean> = this.loginSubject.asObservable();\n\n  loginVisible(visible: boolean): void {\n    this.loginSubject.next(visible);\n  }\n  \n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { IBookingHeader } from '../../ui/interfaces/booking-header.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingHeaderService {\n  private bookingHeaderSubject = new BehaviorSubject<IBookingHeader | null>(null);\n  $bookingHeaderData: Observable<IBookingHeader> = this.bookingHeaderSubject.asObservable();\n\n  sendBookingHeader(data: IBookingHeader): void {\n    this.bookingHeaderSubject.next(data);\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  private _loading = new BehaviorSubject<boolean>(false);\n  public loading$ = this._loading.asObservable();\n\n  setLoading(state: boolean) {\n    this._loading.next(state);\n  }\n}\n","import { HttpErrorResponse, HttpInterceptorFn } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError, throwError } from 'rxjs';\nimport { TokenService } from '../services/utils/token.service';\nimport { LoadingService } from '../services';\n\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n  const tokenService = inject(TokenService);\n  const router = inject(Router);\n  const loaderService = inject(LoadingService);\n\n  let authReq = undefined;\n\n  const excludedRoutes = ['/flights', '/seats'];\n\n  const shouldIntercept = !excludedRoutes.some(\n    (route) => req.url.includes(route) && req.method === 'GET'\n  );\n\n  if (tokenService.isAuthenticated() && shouldIntercept) {\n    authReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${tokenService.getToken()}`,\n      },\n    });\n  }\n\n  return next(authReq ?? req).pipe(\n    catchError((error: HttpErrorResponse) => {\n      loaderService.setLoading(false);\n      switch (error.status) {\n        case 400:\n          break;\n\n        case 401:\n          tokenService.revokeToken();\n          router.navigate(['/login']);\n          break;\n\n        case 403:\n          // toastService.emitToast(\"Error\", error.error.message, \"error\", true);\n          break;\n\n        case 500:\n          // toastService.emitToast(\"Error\", \"Please contact support.\", \"error\", true);\n          break;\n      }\n      return throwError(() => error);\n    })\n  );\n};\n","import { CommonModule } from '@angular/common';\nimport { Component, input, OnChanges, output, SimpleChanges } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IButton } from '../../interfaces/button.interface';\n\n@Component({\n  selector: 'app-button',\n  imports: [CommonModule, RouterModule],\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.scss'\n})\nexport class ButtonComponent implements OnChanges{\n  buttonData = input<IButton>();\n  clickEvent = output();\n\n  clickedEvent() {\n    this.clickEvent.emit();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes['buttonData'] && this.buttonData()?.disabled) {\n      this.buttonData()!.disabled = this.buttonData()!.disabled;\n    }\n  }\n\n} ","<div class=\"button-content\">\n    <button role=\"button\" class=\"button-content__button\"\n        [ngClass]=\"{'button-content__button--small': buttonData()?.size == 'small',\n            'button-content__button--large': buttonData()?.size == 'large',\n            'button-content__button--light': buttonData()?.class == 'light',\n            'button-content__button--dark': buttonData()?.class == 'dark',\n            'button-content__button--transparent': buttonData()?.class == 'transparent',\n            'button-content__button--alternative': buttonData()?.class == 'alternative',\n            'button-content__button--icon': buttonData()?.icon,\n            'button-content__button--disabled': buttonData()?.disabled}\"\n        [disabled]=\"buttonData()?.disabled\"\n        [attr.aria-label]=\"buttonData()?.label\"\n        [attr.aria-disabled]=\"buttonData()?.disabled ? true : null\"\n        [routerLink]=\"buttonData()?.routerLink ? buttonData()?.routerLink : null\"\n        (click)=\"clickedEvent()\">\n        @if (buttonData()?.icon) {\n            <span class=\"button-content__button__icon\">\n                <img [src]=\"buttonData()?.icon\" alt=\"button-icon\">\n            </span>\n        }\n        {{ buttonData()?.label }} \n    </button>\n</div>","import { Component, input, OnChanges, output, SimpleChanges } from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { IInput } from '../../interfaces/input.interface';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-input',\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\n  templateUrl: './input.component.html',\n  styleUrl: './input.component.scss'\n})\nexport class InputComponent implements OnChanges{\n  inputData = input<IInput>();\n  formGroup = input<FormGroup>();\n  outputData = output<string>();\n  formControl!: FormControl;\n  type = \"password\";\n  srcImagenPassword = \"assets/svgs/eye-slash.svg\";\n\n  inputEvent(event: Event) {\n    if(this.formGroup()) {\n      let textType = this.formGroup()!.get(this.inputData()?.formControlName!)?.value;\n      return this.outputData.emit(textType);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes['controlName'] && this.formGroup()) {\n      this.formControl = this.formGroup()!.get(this.inputData()?.formControlName!) as FormControl;\n    }\n  }\n\n  changeType() {\n    this.type = this.type === 'password' ? 'text' : 'password';\n    this.srcImagenPassword = this.type === 'password' ? \"assets/svgs/eye-slash.svg\" : \"assets/svgs/eye.svg\";\n  }\n}","<div class=\"input-content\" [formGroup]=\"formGroup()!\">\n  <input\n    class=\"input-content__input\"\n    [ngClass]=\"{\n      'input-content__input--not-label': !inputData()?.label,\n      'input-content__input--small': inputData()?.size == 'small'\n    }\"\n    [id]=\"inputData()?.id\"\n    [type]=\"inputData()?.type === 'password' ? type : inputData()?.type\"\n    [placeholder]=\"inputData()?.placeholder\"\n    [formControlName]=\"inputData()?.formControlName ?? ''\"\n    [required]=\"inputData()?.required ?? false\"\n    [attr.aria-label]=\"inputData()?.label\"\n    [attr.aria-required]=\"inputData()?.required ?? null\"\n    (keyup)=\"inputEvent($event)\"\n    (change)=\"\n      inputData()?.type === 'datetime-local' ? inputEvent($event) : null\n    \"\n  />\n\n  @if (inputData()?.label) {\n  <label class=\"input-content__float-label\" [for]=\"inputData()?.id\">{{\n    inputData()?.label\n  }}</label>\n  } @if (inputData()!.icon){\n  <span\n    class=\"input-content__input-icon\"\n    [ngClass]=\"{ 'input-content__input-icon--not-label': !inputData()?.label }\"\n  >\n    <img [src]=\"inputData()!.icon\" alt=\"input-icon\" height=\"18px\" />\n  </span>\n  } @if (inputData()?.type === 'password' && formGroup()?.valid) {\n  <span class=\"input-content__input-icon input-content__input-icon--password\">\n    <img\n      [src]=\"srcImagenPassword\"\n      alt=\"icon for show and hide password\"\n      height=\"18px\"\n      (click)=\"changeType()\"\n    />\n  </span>\n  } @if (!inputData()!.icon &&\n  formGroup()!.get(inputData()!.formControlName)?.invalid &&\n  (formGroup()!.get(inputData()!.formControlName)?.dirty ||\n  formGroup()!.get(inputData()!.formControlName)?.touched)) {\n\n  <span class=\"input-content__input-icon\">\n    <img src=\"assets/svgs/danger.svg\" alt=\"input-icon\" height=\"16px\" />\n  </span>\n\n  @if (formGroup()!.get(inputData()!.formControlName)?.errors?.['required']) {\n  <span class=\"input-content__error-message\"\n    >{{ inputData()?.label }} is required.</span\n  >\n  } @if (formGroup()!.get(inputData()!.formControlName)?.errors?.['email']) {\n  <span class=\"input-content__error-message\">Invalid email format.</span>\n  } @if (formGroup()!.get(inputData()!.formControlName)?.errors?.['maxlength'])\n  {\n  <span class=\"input-content__error-message\"\n    >{{ inputData()?.label }} must contain no more than\n    {{formGroup()!.get(inputData()!.formControlName)?.errors?.['maxlength'].requiredLength}}\n    of characters.</span\n  >\n  } @if (formGroup()!.get(inputData()!.formControlName)?.errors?.['minlength'])\n  {\n  <span class=\"input-content__error-message\"\n    >{{ inputData()?.label }} must contain at least\n    {{formGroup()!.get(inputData()!.formControlName)?.errors?.['minlength'].requiredLength}}\n    of characters.</span\n  >\n  } }\n</div>\n","import { CommonModule } from '@angular/common';\nimport { Component, inject, input, OnChanges, output, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ButtonComponent } from \"../button/button.component\";\nimport { InputComponent } from \"../input/input.component\";\nimport { FormService } from '../../../services/utils/form.service';\nimport { IForm } from '../../interfaces/form.interface';\n\n@Component({\n  selector: 'app-form',\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, ButtonComponent, InputComponent],\n  templateUrl: './form.component.html',\n  styleUrl: './form.component.scss'\n})\nexport class FormComponent implements OnChanges {\n  private fb = inject(FormBuilder);\n  formService = inject(FormService);\n  // toastService = inject(ToastService);\n  formData = input<IForm>();\n\n  form!: FormGroup;\n  loadFields: boolean = false;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.loadFields && this.formData()?.fields) {\n      this.buildForm();\n    }\n  }\n\n  buildForm(): void {\n    const controls: any = {};\n    this.formData()?.fields?.forEach((field) => {\n      const control = this.fb.control(\n        {\n            value: field.input?.value || '',\n            disabled: field.input?.disabled || false\n        },\n          field.validators || []\n      );\n      controls[field.name] = control;\n    });\n    this.form = this.fb.group(controls);\n  }\n\n  onSubmit(): void {\n    this.form.markAllAsTouched();\n    if (this.form.valid) {\n      this.formService.sendForm(this.form.value);\n    } else {\n      // this.toastService.emitToast(\"Error\", \"Inconsistency in fields\", \"error\", true);\n    }\n  }\n\n}","<div class=\"form-container\">\n  <form action=\"\" [formGroup]=\"form\" aria-label=\"Data Form\">\n    <div class=\"grid\">\n      @for (item of formData()?.fields; track $index) {\n      <div [class]=\"item.class\">\n        @if (item.type === 'input' && item.input) {\n        <div class=\"form-container__field\">\n          <app-input [inputData]=\"item.input\" [formGroup]=\"form\"></app-input>\n        </div>\n        } \n      </div>\n    }\n      <div class=\"col-12 form-container__button\">\n        <app-button\n          [buttonData]=\"formData()?.buttonForm\"\n          (clickEvent)=\"onSubmit()\"\n        ></app-button>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, inject, OnInit, output } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../../../services';\nimport { ButtonComponent } from '../../components/button/button.component';\nimport { InputComponent } from '../../components/input/input.component';\nimport { IButton, IInput } from '../../interfaces';\n\n@Component({\n  selector: 'app-login-form',\n  imports: [ButtonComponent, FormsModule, ReactiveFormsModule, InputComponent],\n  templateUrl: './login-form.component.html',\n  styleUrl: './login-form.component.scss'\n})\nexport class LoginFormComponent implements OnInit {\n  submit = output<FormGroup>();\n  private loginService = inject(LoginService);\n  private fb = inject(FormBuilder);\n  private router = inject(Router);\n\n  showComponent = false;\n\n  emailInput: IInput = {\n    id: 'email',\n    label: 'E-mail or Nº Air Europa SUMA',\n    placeholder: '',\n    value: '',\n    type: 'email',\n    formControlName: 'email',\n    required: true,\n    disabled: false,\n  };\n\n  passwordInput: IInput = {\n    id: 'password',\n    label: 'Password',\n    placeholder: '',\n    value: '',\n    type: 'password',\n    formControlName: 'password',\n    required: true,\n    disabled: false,\n  };\n\n  form: FormGroup = this.fb.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  submitButtonData: IButton = {\n    class: 'dark',\n    size: 'large',\n    label: 'Log in',\n    disabled: true,\n  };\n\n  buttonData: IButton = {\n    class: 'light',\n    size: 'large',\n    label: 'Sign up',\n    disabled: false,\n  };\n\n  ngOnInit(): void {\n    this.loginService.$showLogin.subscribe((visible: boolean) => {\n      this.showComponent = visible;\n    });\n  }\n\n  validateForm() {\n    this.submitButtonData.disabled = this.form.invalid;\n  }\n\n  onClose() {\n    this.showComponent = false;\n    this.form.reset();\n  }\n\n  auth() {\n    \n  }\n  submitForm() {\n    this.submit.emit(this.form.getRawValue());\n  }\n\n  redirectToRegister() {\n    this.router.navigate(['users']);\n  }\n}\n","@if(showComponent) {\n    <div class=\"login\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-title\">\n        <div class=\"login__backdrop\"></div>\n        <div class=\"login__content\">\n            <span class=\"login__content__close\">\n                <svg width=\"28\" height=\"28\" (click)=\"onClose()\">\n                    <use xlink:href=\"assets/svgs/close.svg#close\"></use>\n                </svg>\n            </span>\n\n            <div class=\"login__form\">\n                <h2>Login with your account Air Europa SUMA</h2>\n            \n                <form [formGroup]=\"form\" aria-label=\"Data Form\">\n                    <div class=\"login__form__field\">\n                        <app-input [inputData]=\"emailInput\" [formGroup]=\"form\" (outputData)=\"validateForm()\"></app-input>\n                    </div>\n                    <div class=\"login__form__field\">\n                        <app-input [inputData]=\"passwordInput\" [formGroup]=\"form\" (outputData)=\"validateForm()\"></app-input>\n                    </div>\n\n                    <a href=\"#\" class=\"login__form__common\">\n                        <span>Have you forgotten your password?</span>\n                    </a>\n\n                    <div class=\"login__form__remember\">\n                        <input type=\"checkbox\" id=\"remember\" name=\"remember\">\n                        <label for=\"remember\">Remember Sesion</label>\n                    </div>\n                    <app-button [buttonData]=\"submitButtonData\" (clickEvent)=\"submitForm()\"></app-button>\n                </form>\n            </div>\n    \n            <div class=\"login__registration\">\n                <h3>Get the best of Air Europa with SUMA</h3>\n                <div class=\"login__registration__img\">\n                    <img class=\"svg\" alt=\"Picture of suma-login\" id=\"suma-login\" src=\"assets/svgs/picture-login.svg\">\n                </div>\n                <div class=\"login__registration__details\">\n                    <p> Become a member of the loyalty program \n                        <strong> Air Europa</strong>\n                        save time and accumulate \n                        <strong>Miles</strong>\n                        to redeem them later on your next flights. \n                    </p>\n                    <app-button [buttonData]=\"buttonData\" (clickEvent)=\"redirectToRegister()\"></app-button>\n                </div>\n            </div>\n        </div>\n    </div>\n}","import { Component, input } from '@angular/core';\nimport { IRouteFlight } from '../../interfaces';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lib-route-flight',\n  imports: [CommonModule],\n  templateUrl: './route-flight.component.html',\n  styleUrl: './route-flight.component.scss'\n})\nexport class RouteFlightComponent {\n  routeData = input.required<IRouteFlight>();\n}","@if (routeData().days) {\n  <div class=\"badge\">\n    <span>{{ routeData().days }}</span>\n  </div>\n}\n<div class=\"flight\">\n\n  <div class=\"flight__from\">\n    <span class=\"flight__from__time\">{{ routeData().departureTime }}</span>\n    <span class=\"flight__from__airport\">{{ routeData().departureAirportCode }}</span>\n  </div>\n\n  <div class=\"flight__center\">\n    <div class=\"flight__center__stop\">\n      @if (routeData().stopAirportCode) {\n      <span class=\"flight__center__stop-airport\">{{ routeData().stopAirportCode }}</span>\n      <span class=\"flight__center__stop-dot\"></span>\n      <span class=\"flight__center__stop-duration\">{{ routeData().stopDuration }}</span>\n      }\n    </div>\n    <div class=\"flight__center__arrow\">\n      <span class=\"flight__center__arrow--start\"></span>\n      <hr />\n      <span class=\"flight__center__arrow--end\"></span>\n    </div> \n  \n\n  </div>\n\n   <div class=\"flight__to\">\n      <span class=\"flight__to__time\">{{ routeData().arrivalTime }}</span>\n      <span class=\"flight__to__airport\">{{ routeData().arrivalAirportCode }}</span>\n   </div>\n</div>\n","import { Component, input } from '@angular/core';\nimport { IDetailsFlight } from '../../interfaces';\n\n@Component({\n  selector: 'lib-detail-flight',\n  imports: [],\n  templateUrl: './detail-flight.component.html',\n  styleUrl: './detail-flight.component.scss'\n})\nexport class DetailFlightComponent {\n  detailsData = input.required<IDetailsFlight>();\n}\n","<div class=\"flight-detail\">\n    @for (item of detailsData().detail; track $index) {\n        <span class=\"flight-detail__label\">{{ item }}</span>\n    }\n   \n    <a href=\"\">\n        <span class=\"flight-detail__ref\">{{ detailsData().ref }}</span>\n    </a>\n</div>","import { CommonModule } from '@angular/common';\nimport { Component, input, output } from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IDropdown } from '../../interfaces';\n\n\n@Component({\n  selector: 'app-dropdown',\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\n  templateUrl: './dropdown.component.html',\n  styleUrl: './dropdown.component.scss'\n})\nexport class DropdownComponent {\n  dropdownData = input<IDropdown>();\n  formGroup = input<FormGroup>();\n  outputData = output<string>();\n\n  dropdownChange() {\n    if(this.formGroup()) {\n      let textType = this.formGroup()!.get(this.dropdownData()?.formControlName!)?.value;\n      return this.outputData.emit(textType);\n    }\n  }\n\n  validDropdown(): boolean {\n    return  this.formGroup()!.get(this.dropdownData()!.formControlName)?.invalid &&\n    (this.formGroup()!.get(this.dropdownData()!.formControlName)?.dirty ||\n    this.formGroup()!.get(this.dropdownData()!.formControlName)?.touched);\n  }\n}\n","<div class=\"dropdown-content\" [formGroup]=\"formGroup()!\">\n    <select class=\"dropdown-content__dropdown\" required\n      [ngClass]=\"{\n        'dropdown-content__dropdown--not-label': !dropdownData()?.label,\n        'dropdown-content__dropdown--small': dropdownData()?.size == 'small',\n        'dropdown-content__dropdown--error': validDropdown(),\n        'dropdown-content__dropdown--selected': formGroup()!.get(dropdownData()!.formControlName)?.value\n      }\"\n      [id]=\"dropdownData()?.id\"\n      [formControlName]=\"dropdownData()?.formControlName ?? ''\"\n      [required]=\"dropdownData()?.required ?? false\"\n      [attr.aria-label]=\"dropdownData()?.label\"\n      [attr.aria-required]=\"dropdownData()?.required ?? null\"\n      (change)=\"dropdownChange()\">\n        @for (option of dropdownData()?.options; track $index) {\n            <option class=\"dropdown-content__dropdown__option\" [value]=\"option.value\">{{ option.label }}\n                <!-- <span>test</span> -->\n            </option>\n        }\n    </select>\n  \n    @if (dropdownData()?.label) {\n    <label class=\"dropdown-content__float-label\" [for]=\"dropdownData()?.id\">{{ dropdownData()?.label }}</label>\n    }  \n\n    @if (validDropdown()) {\n  \n        <span class=\"dropdown-content__dropdown-icon\">\n        <img src=\"assets/svgs/danger.svg\" alt=\"dropdown-icon\" height=\"16px\" />\n        </span>\n        @if (formGroup()!.get(dropdownData()!.formControlName)?.errors?.['required']) {\n            <span class=\"dropdown-content__error-message\">{{ dropdownData()?.label }} is required.</span>\n        } \n    }\n</div> ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-spinner',\n  imports: [],\n  templateUrl: './spinner.component.html',\n  styleUrl: './spinner.component.scss',\n})\nexport class SpinnerComponent {}\n","<div class=\"content\">\n  <div class=\"spinner\"></div>\n  <p>Loading...</p>\n</div>\n","import { Component, input } from '@angular/core';\nimport { SpinnerComponent } from '../spinner/spinner.component';\n\n@Component({\n  selector: 'lib-loading-screen',\n  imports: [SpinnerComponent],\n  templateUrl: './loading-screen.component.html',\n  styleUrl: './loading-screen.component.scss',\n})\nexport class LoadingScreenComponent {\n  isLoading = input<boolean>();\n}\n","@if (isLoading()) {\n<div class=\"loading-overlay\">\n  <lib-spinner></lib-spinner>\n</div>\n}\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { LoadingScreenComponent } from '../../components/loading-screen/loading-screen.component';\nimport { Subscription } from 'rxjs';\nimport { LoadingService } from '../../../services/utils/loading.service';\n\n@Component({\n  selector: 'lib-loading',\n  imports: [LoadingScreenComponent],\n  templateUrl: './loading.component.html',\n})\nexport class LoadingComponent implements OnInit, OnDestroy {\n  private readonly _loadingService = inject(LoadingService);\n  private subscription: Subscription | undefined;\n\n  isLoading = false;\n\n  ngOnInit(): void {\n    this.subscription = new Subscription();\n    this.subscription.add(\n      this._loadingService.loading$.subscribe((loading) => {\n        this.isLoading = loading;\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<lib-loading-screen [isLoading]=\"isLoading\"></lib-loading-screen>","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { BookingHeaderService } from '../../../services/utils/bookin-header.service';\nimport { IBookingHeader } from '../../interfaces/booking-header.interface';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-booking-header',\n  imports: [],\n  templateUrl: './booking-header.component.html',\n  styleUrl: './booking-header.component.scss'\n})\nexport class BookingHeaderComponent implements OnInit, OnDestroy {\n  bookingHeaderService = inject(BookingHeaderService);\n  headerData: IBookingHeader;\n  private headerSubject$ = new Subject<void>();\n\n  ngOnInit(): void {\n    this.bookingHeaderService.$bookingHeaderData.pipe(takeUntil(this.headerSubject$)).subscribe(data => {\n      this.headerData = data;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.headerSubject$.next();\n    this.headerSubject$.complete();\n  }\n}","<header class=\"header\">\n    <div class=\"header__primary\">\n        <div class=\"header__primary__content\">\n            <div class=\"header__primary__content__logos\">\n                <a href=\"#\">\n                    <img class=\"header__primary__content__icon\" src=\"assets/svgs/air-europa-logo.svg\" alt=\"Logo AirEuropa\">\n                </a>\n                <a href=\"#\">\n                    <img class=\"header__primary__content__icon\"src=\"assets/svgs/skyteam.svg\" alt=\"Logo SkyTeam\">\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"header__secondary\">\n        <div class=\"header__secondary__content\">\n            <h1 class=\"header__secondary__title\"> {{ headerData.title }} </h1>\n            <h4 class=\"header__secondary__subtitle\">{{ headerData.subtitle }}</h4>\n        </div>\n    </div>\n</header>","import { Component } from '@angular/core';\nimport { BookingHeaderComponent } from \"../booking-header/booking-header.component\";\nimport { RouterOutlet } from '@angular/router';\nimport { LoadingComponent } from \"../../containers/loading/loading.component\";\n\n@Component({\n  selector: 'app-booking-layout',\n  imports: [BookingHeaderComponent, RouterOutlet, LoadingComponent],\n  templateUrl: './booking-layout.component.html',\n  styleUrl: './booking-layout.component.scss'\n})\nexport class BookingLayoutComponent {\n  \n}\n","<div class=\"layout-container\" tabindex=\"0\">\n    <div class=\"layout-container__content\">\n        <app-booking-header></app-booking-header>\n        <main role=\"main\">\n            <router-outlet></router-outlet>\n        </main>\n    </div>\n</div>\n<lib-loading></lib-loading>","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IState } from \"../model/state.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateFactory {\n  state<T>(subject$: BehaviorSubject<T>): IState<T> {\n    return {\n      $: () => subject$.asObservable(),\n      snapshot: () => this.immutabilize(subject$.getValue()),\n      set: (value: T) => subject$.next(this.immutabilize(value))\n    }\n  }\n\n  private immutabilize<T>(value: T): T {\n    return JSON.parse(JSON.stringify(value));\n  }\n}","import { inject, Injectable } from \"@angular/core\";\nimport { StateFactory } from \"./state.factory\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IAuthResponse } from \"../model/auth-response.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersState {\n  private readonly _factory = inject(StateFactory);\n\n  //#region Subjects\n  private readonly auth$ = new BehaviorSubject<IAuthResponse>(null);\n  //#endregion\n\n  store() {\n    return {\n      auth: this._factory.state(this.auth$)\n    }\n  }\n}","import { inject, Injectable } from \"@angular/core\";\nimport { UsersState } from \"./users.state\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class State {\n  private readonly _users = inject(UsersState);\n\n  get users() {\n    return this._users.store();\n  }\n}","import { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IAuthResponse } from '../../../domain/model/auth-response.model';\nimport { IAuthRequest } from '../../../domain/model/auth-request.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Environment } from '../../environments';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthUserService {\n  private http = inject(HttpClient);\n\n  authUser(auth: IAuthRequest):Observable<IAuthResponse> {\n    return this.http.post<IAuthResponse>(`${Environment.baseApi}/auth/login`, auth);\n  }\n\n}","import { inject, Injectable } from '@angular/core';\nimport { Subscription, Observable, tap } from 'rxjs';\nimport { State } from '../domain/state';\nimport { IAuthResponse } from '../domain/model/auth-response.model';\nimport { AuthUserService } from '../infrastructure/services/api/auth-user.service';\nimport { IAuthRequest } from '../domain/model/auth-request.model';\nimport { Router } from '@angular/router';\nimport { LoadingService, TokenService } from '../public-api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthUserUseCase {\n  private readonly _service = inject(AuthUserService);\n  private readonly _state = inject(State);\n  private router = inject(Router);\n  private tokenService = inject(TokenService);\n  private subscriptions: Subscription;\n  private loaderService = inject(LoadingService);\n\n  //#region Observables\n  authUser$(): Observable<IAuthResponse> {\n    return this._state.users.auth.$();\n  }\n  //#endregion\n\n  //#region Public Methods\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(user: IAuthRequest): void {\n    this.subscriptions.add(\n      this._service\n        .authUser(user)\n        .pipe(\n          tap((result) => {\n            this.loaderService.setLoading(false);\n            if (result!.token) {\n              this._state.users.auth.set(result);\n              if (result?.token) {\n                localStorage.setItem('email', result.email);\n                localStorage.setItem('role', result.role);\n                localStorage.setItem('id', result.id);\n                this.tokenService.handleToken(result.token);\n                if(result.role ===  'ADMIN'){\n                  this.router.navigate(['/admin']);\n\n                } else {\n                  this.router.navigate(['']);\n                  window.location.reload();\n                }\n              }\n            }\n          })\n        )\n        .subscribe()\n    );\n  }\n  //#endregion\n}\n","import { Component, inject, OnInit } from '@angular/core';\nimport { LoginFormComponent } from \"../../forms/login-form/login-form.component\";\nimport { AuthUserUseCase } from '../../../../application/auth-user.usecase';\nimport { Subject } from 'rxjs';\nimport { LoadingService, TokenService } from '../../../services';\nimport { IAuthRequest } from '../../../../domain/model/auth-request.model';\n\n@Component({\n  selector: 'lib-login',\n  imports: [LoginFormComponent],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent implements OnInit {\n  private readonly _useCase = inject(AuthUserUseCase);\n  private tokenService = inject(TokenService);\n  private loaderService = inject(LoadingService);\n\n  renderLogin = false;\n\n  ngOnInit(): void {\n    if(!this.tokenService.isAuthenticated()) {\n      this.renderLogin = true;\n      this._useCase.initSubscriptions();\n    }\n  }\n\n  ngOnDestroy(): void {\n    !this.tokenService.isAuthenticated() && this._useCase.destroySubscriptions();\n  }\n\n  auth(authForm: any) {\n    this.loaderService.setLoading(true);\n    this._useCase.execute(authForm as IAuthRequest);\n  }\n\n}","@if(renderLogin){\n    <app-login-form (submit)=\"auth($event)\"></app-login-form>\n}","import { CommonModule } from '@angular/common';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService, TokenService } from '../../../services';\nimport { ButtonComponent, InputComponent } from '../../components';\nimport { Inav } from '../../interfaces';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-header',\n  imports: [CommonModule, ButtonComponent, InputComponent],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\nexport class HeaderComponent implements OnInit {\n  private loginService = inject(LoginService);\n  private tokenService = inject(TokenService);\n  private router = inject(Router);\n  \n  itemsNavBar: Inav[] = [\n    {\n      type: 'button',\n      buttonData: {\n        label: 'United States Of America | en',\n        class: 'transparent',\n        size: 'small',\n        icon: 'assets/svgs/world.svg',\n        disabled: false,\n      },\n    },\n    {\n      type: 'input',\n      divider: true,\n      inputData: {\n        id: 'search',\n        placeholder: 'Any questions?',\n        value: '',\n        type: 'text',\n        formControlName: 'search',\n        icon: 'assets/svgs/search.svg',\n        size: 'small',\n        required: true,\n        disabled: false,\n      },\n      formData: new FormGroup({\n        search: new FormControl(''),\n      }),\n    },\n    {\n      type: 'button',\n      divider: true,\n      buttonData: {\n        label: 'Manage your reservation',\n        class: 'transparent',\n        size: 'small',\n        icon: 'assets/svgs/plane.svg',\n        disabled: false,\n      },\n    },\n    {\n      type: 'button',\n      buttonData: {\n        label: 'Check-in',\n        class: 'alternative',\n        size: 'small',\n        icon: 'assets/svgs/check-in.svg',\n        disabled: false,\n      },\n    },\n    {\n      type: 'button',\n      divider: true,\n      action: 'register',\n      buttonData: {\n        label: 'Sign up',\n        class: 'transparent',\n        size: 'small',\n        disabled: false,\n        routerLink: 'users/register',\n      },\n    },\n    {\n      type: 'button',\n      action: 'login',\n      buttonData: {\n        label: 'My Account',\n        class: 'dark',\n        size: 'small',\n        disabled: false,\n      },\n    },\n  ];\n\n  ngOnInit(): void {}\n\n  executeAction(action: string) {\n    switch (action) {\n      case 'login':\n        this.tokenService.isAuthenticated() ? this.router.navigate(['/admin']): this.loginService.loginVisible(true);\n        break;\n      case  'register':\n        this.router.navigate(['users/']);\n        break;\n      default:\n        break;\n    }\n  }\n  \n}","<header class=\"header\">\n    <div class=\"header__content\">\n        <div class=\"header__content__logos\">\n            <a class=\"header__content__logos__icon header__content__logos__icon--left\" href=\"#\">\n                <img src=\"assets/svgs/air-europa-logo.svg\" alt=\"Logo AirEuropa\">\n            </a>\n            <a class=\"header__content__logos__icon header__content__logos__icon--rigth\" href=\"#\">\n                <img src=\"assets/svgs/skyteam.svg\" alt=\"Logo SkyTeam\">\n            </a>\n        </div>\n        \n        <menu class=\"header__content__options\">\n            @for (item of itemsNavBar; track $index) {\n                <li [ngClass]=\"{'header__content__options__list': item.divider}\">\n                    @if (item.type === 'button') {\n                        <app-button [buttonData]=\"item.buttonData\" (clickEvent)=\"item.action ? executeAction(item.action) : null\"></app-button>\n                    }\n                    @else if (item.type === 'input') {\n                        <span class=\"header__content__options__input\">\n                            <app-input [formGroup]=\"item.formData\" [inputData]=\"item.inputData\"></app-input>\n                        </span>\n                    }\n                </li>\n            }\n        </menu>\n    </div>\n</header>","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { LoginComponent } from \"../../containers/login/login.component\";\nimport { HeaderComponent } from '../header/header.component';\nimport { LoadingComponent } from \"../../containers/loading/loading.component\";\n\n@Component({\n  selector: 'lib-default-layout',\n  imports: [HeaderComponent, RouterOutlet, LoginComponent, LoadingComponent],\n  templateUrl: './default-layout.component.html',\n  styleUrl: './default-layout.component.scss'\n})\nexport class DefaultLayoutComponent {\n\n}","<div class=\"layout-container\" tabindex=\"0\">\n    <div class=\"layout-container__content\">\n        <app-header></app-header>\n        <main role=\"main\">\n            <router-outlet></router-outlet>\n        </main>\n    </div>\n</div>\n\n<lib-login></lib-login>\n<lib-loading></lib-loading>","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1"],"mappings":"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"}