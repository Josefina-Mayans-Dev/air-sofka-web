{"version":3,"file":"pay.mjs","sources":["../../../projects/pay/src/infrastructure/ui/forms/payment-form/payment-form.component.ts","../../../projects/pay/src/infrastructure/ui/forms/payment-form/payment-form.component.html","../../../projects/pay/src/domain/state/state.factory.ts","../../../projects/pay/src/domain/state/pay.state.ts","../../../projects/pay/src/domain/state/index.ts","../../../projects/pay/src/application/method-pay.usecase.ts","../../../projects/pay/src/infrastructure/ui/containers/payment/payment.component.ts","../../../projects/pay/src/infrastructure/ui/containers/payment/payment.component.html","../../../projects/pay/src/infrastructure/ui/routes/pay.routes.ts","../../../projects/pay/src/public-api.ts","../../../projects/pay/src/pay.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { DropdownComponent, IDropdown, IInput, InputComponent } from 'shared';\n\n@Component({\n  selector: 'lib-payment-form',\n  imports: [CommonModule,ReactiveFormsModule,DropdownComponent,InputComponent],\n  templateUrl: './payment-form.component.html',\n  styleUrl: './payment-form.component.scss',\n})\nexport class PaymentFormComponent implements OnInit, OnDestroy {\n  @Output() formReady = new EventEmitter<FormGroup>();\n  @Output() paymentSubmit = new EventEmitter<FormGroup>();\n\n  paymentForm!: FormGroup;\n  private formSubscription: Subscription | undefined;\n\n  metodoPagoDropdown: IDropdown = {\n    id: 'metodoPago',\n    label: 'Metodo de Pago',\n    options: [\n      { label: 'Tarjeta de Crédito', value: 'tarjetaCredito' },\n      { label: 'PayPal', value: 'paypal' },\n    ],\n    formControlName: 'metodoPago'\n  };\n\n  correoInput: IInput = {\n    id: 'correo',\n    label: 'Correo electrónico',\n    placeholder: '',\n    value: '',\n    type: 'email',\n    formControlName: 'correo',\n    required: true,\n    disabled: false,\n  };\n\n  prefijoTelefonoDropdown: IDropdown = {\n    id: 'prefijoTelefono',\n    label: 'Prefijo telefónico del país',\n    options: [\n      { label: 'Ecuador (+593)', value: '+593' },\n      { label: 'España (+34)', value: '+34' },\n      { label: 'Afganistán (+93)', value: '+93' },\n      { label: 'Albania (+355)', value: '+355' }, \n      { label: 'Alemania (+49)', value: '+49' },\n      { label: 'Andorra (+376)', value: '+376' },\n      { label: 'Angola (+244)', value: '+244' },\n      { label: 'Anguila (+1264)', value: '+1264' },\n      { label: 'Bolivia (+591)', value: '+591' },\n      { label: 'Brasil (+55)', value: '+55' },\n      { label: 'Chile (+56)', value: '+56' },\n      { label: 'Colombia (+57)', value: '+57' },\n      { label: 'Perú (+51)', value: '+51' },\n      { label: 'Venezuela (+58)', value: '+58' },\n      { label: 'Argentina (+54)', value: '+54' },\n      { label: 'Uruguay (+598)', value: '+598' },\n    ],\n    formControlName: 'prefijoTelefono'\n  };\n\n  numeroTelefonoInput: IInput = {\n    id: 'numeroTelefono',\n    label: 'Número de teléfono',\n    placeholder: '',\n    value: '',\n    type: 'number',\n    formControlName: 'numeroTelefono',\n    required: true,\n    disabled: false,\n  };\n\n  numeroTarjetaInput: IInput = {\n    id: 'numeroTarjeta',\n    label: 'Número de tarjeta',\n    placeholder: '',\n    value: '',\n    type: 'number',\n    formControlName: 'numeroTarjeta',\n    required: true,\n    disabled: false,\n  };\n\n  fechaCaducidadMesInput: IInput = {\n    id: 'fechaCaducidadMes',\n    label: 'Fecha de caducidad (MM)',\n    placeholder: '',\n    value: '',\n    type: 'number',\n    formControlName: 'fechaCaducidadMes',\n    required: true,\n    disabled: false,\n  };\n\n  fechaCaducidadAnioInput: IInput = {\n    id: 'fechaCaducidadAnio',\n    label: 'Fecha de caducidad (AA)',\n    placeholder: '',\n    value: '',\n    type: 'number',\n    formControlName: 'fechaCaducidadAnio',\n    required: true,\n    disabled: false,\n  };\n\n  cvcInput: IInput = {\n    id: 'cvc',\n    label: 'CVC/CVV',\n    placeholder: '',\n    value: '',\n    type: 'number',\n    formControlName: 'cvc',\n    required: true,\n    disabled: false,\n  };\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.paymentForm = this.fb.group({\n      metodoPago: ['', Validators.required],\n      correo: ['', [Validators.required,Validators.email]],\n      prefijoTelefono: ['', Validators.required],\n      numeroTelefono: ['', [Validators.required,Validators.pattern(/^\\d{9}$/)]],\n      numeroTarjeta: ['', [Validators.required, Validators.pattern(/^\\d{16}$/)]], \n      fechaCaducidadMes: ['', [Validators.required, Validators.pattern(/^(0[1-9]|1[0-2])$/)]],\n      fechaCaducidadAnio: ['', [Validators.required, Validators.pattern(/^\\d{2}$/)]],\n      cvc: ['', [Validators.required, Validators.pattern(/^\\d{3,4}$/)]],\n      aceptarTerminos: [false, Validators.requiredTrue],\n      aceptarPrivacidad: [false, Validators.requiredTrue],\n    });\n    this.formReady.emit(this.paymentForm);\n\n    this.formSubscription = this.paymentForm.valueChanges.subscribe(\n      (values) => {}\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.formSubscription) {\n      this.formSubscription.unsubscribe();\n    }\n  }\n\n  onSubmit() {\n    if (this.paymentForm.valid) {\n      this.paymentSubmit.emit(this.paymentForm);\n    } else {\n      Object.values(this.paymentForm.controls).forEach((control) => {\n        control.markAsTouched();\n      });\n    }\n  }\n}\n","<form [formGroup]=\"paymentForm\" class=\"payment-form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"grid\">\n    <div class=\"col-12\">\n      <app-dropdown [dropdownData]=\"metodoPagoDropdown\" [formGroup]=\"paymentForm\"> </app-dropdown>\n    </div>\n  </div>\n  <div class=\"grid\">\n    <div class=\"col-12\">\n      <app-input [inputData]=\"correoInput\" [formGroup]=\"paymentForm\"></app-input>\n    </div>\n  </div>\n  <div class=\"grid\">\n    <div class=\"col-12\">\n      <app-dropdown [dropdownData]=\"prefijoTelefonoDropdown\" [formGroup]=\"paymentForm\"> </app-dropdown>\n    </div>\n  </div>\n\n  <div class=\"grid\">\n    <div class=\"col-12\">\n      <app-input [inputData]=\"numeroTelefonoInput\" [formGroup]=\"paymentForm\"></app-input>\n    </div>\n  </div>\n\n  <div class=\"grid\">\n    <div class=\"col-12\">\n      <app-input [inputData]=\"numeroTarjetaInput\" [formGroup]=\"paymentForm\"></app-input>\n    </div>\n  </div>\n\n  <div class=\"grid\">\n    <div class=\"col-6\">\n      <app-input [inputData]=\"fechaCaducidadMesInput\" [formGroup]=\"paymentForm\"></app-input>\n    </div>\n    <div class=\"col-6\">\n      <app-input [inputData]=\"fechaCaducidadAnioInput\" [formGroup]=\"paymentForm\"></app-input>\n    </div>\n  </div>\n\n  <div class=\"grid\">\n    <div class=\"col-12\">\n      <app-input [inputData]=\"cvcInput\" [formGroup]=\"paymentForm\"></app-input>\n    </div>\n  </div>\n\n  <div class=\"payment-form__group\">\n    <label class=\"payment-form__checkbox-label\">\n      <input type=\"checkbox\" formControlName=\"aceptarTerminos\" class=\"payment-form__checkbox\" />\n      I accept the Booking Conditions, etc.\n    </label>\n    @if(paymentForm.get('aceptarTerminos')?.errors && paymentForm.get('aceptarTerminos')?.touched) {\n    <div class=\"error-message\">You must accept the conditions.</div>\n    }\n  </div>\n\n  <div class=\"payment-form__group\">\n    <label class=\"payment-form__checkbox-label\">\n      <input type=\"checkbox\" formControlName=\"aceptarPrivacidad\" class=\"payment-form__checkbox\" />\n      I accept the Privacy Policy.\n    </label>\n    @if(paymentForm.get('aceptarPrivacidad')?.errors && paymentForm.get('aceptarPrivacidad')?.touched) {\n    <div class=\"error-message\">Debe aceptar la política.</div>\n    }\n  </div>\n\n  <button type=\"submit\" class=\"payment-form__button\" [disabled]=\"!paymentForm.valid\">Proccess payment</button>\n</form>","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IState } from \"../model/state.model\";\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class StateFactory {\n    state<T>(subject$: BehaviorSubject<T>): IState<T> {\n      return {\n        $: () => subject$.asObservable(),\n        snapshot: () => this.immutabilize(subject$.getValue()),\n        set: (value: T) => subject$.next(this.immutabilize(value)),\n      };\n    }\n  \n    private immutabilize<T>(value: T): T {\n      return JSON.parse(JSON.stringify(value));\n    }\n  }\n  ","import { inject, Injectable } from \"@angular/core\";\nimport { StateFactory } from \"./state.factory\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { IMethodPay } from \"../model/method-pay.model\";\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class PayState {\n  private readonly _factory = inject(StateFactory);\n\n  //#region Subjects\n  private readonly _methodPay$ = new BehaviorSubject<IMethodPay>(null);\n\n  //#endregion\n\n  store() {\n    return {\n      methodPay: this._factory.state(this._methodPay$),\n\n    };\n  }\n}","import { inject, Injectable } from \"@angular/core\";\nimport { PayState } from \"./pay.state\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class State {\n  private readonly _pay = inject(PayState);\n  \n  get pay() {\n    return this._pay.store();\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { State } from '../domain/state';\nimport { IMethodPay } from '../domain/model/method-pay.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MethodPayUseCase {\n  private readonly _state = inject(State);\n  private subscriptions: Subscription;\n\n  //#region Observables\n  getMethodPay$(): Observable<IMethodPay> {\n    return this._state.pay.methodPay.$();\n  }\n\n\n  //#region Public Methods\n  initSubscriptions(): void {\n    this.subscriptions = new Subscription();\n  }\n\n  destroySubscriptions(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  execute(methodPay: IMethodPay): void {\n    this.subscriptions.add(\n        this._state.pay.methodPay.set(methodPay)\n    )\n  }\n}\n","import { Component, inject, OnDestroy, OnInit } from '@angular/core';\nimport { Form, FormBuilder, FormGroup } from '@angular/forms';\nimport { PaymentFormComponent } from '../../forms/payment-form/payment-form.component';\nimport { BookingHeaderService } from 'shared';\nimport { Observable, of, switchMap, tap } from 'rxjs';\nimport { MethodPayUseCase } from '../../../../application/method-pay.usecase';\nimport { IMethodPay } from '../../../../domain/model/method-pay.model';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-payment',\n  imports: [PaymentFormComponent,AsyncPipe, CommonModule],\n  templateUrl: './payment.component.html',\n  styleUrl: './payment.component.scss',\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  paymentForm: FormGroup;\n  processingPayment: boolean = false;\n  paymentMessage: string = '';\n  private headerService = inject(BookingHeaderService);\n  private readonly _useCaseMethodPay = inject(MethodPayUseCase);\n  private readonly router = inject(Router);\n\n  public methodPay$: Observable<IMethodPay>;\n\n  constructor(private fb: FormBuilder) {\n    this.headerService.sendBookingHeader({\n      title: 'Pago',\n      subtitle: 'Informacion de contacto y pago.',\n    });\n  }\n  ngOnDestroy(): void {\n    this._useCaseMethodPay.destroySubscriptions();\n  }\n  ngOnInit(): void {\n    this._useCaseMethodPay.initSubscriptions();\n    this.methodPay$ = this._useCaseMethodPay.getMethodPay$();\n  }\n\n  onPaymentSubmit(form: FormGroup) {\n    if (form.valid) {\n      this.processingPayment = true;\n      of(this._useCaseMethodPay.execute(form.value.metodoPago))\n        .pipe(switchMap(() => this.methodPay$))\n        .subscribe();\n\n      this.paymentMessage = 'Processing payment...';\n      this.router.navigate(['/booking']);\n\n      setTimeout(() => {\n        this.processingPayment = false;\n      }, 2000);\n    } else {\n      this.paymentMessage =\n        'Please complete all required fields.....';\n    }\n  }\n}\n","<div class=\"payment-container\">\n    <h2>Paga tu reserva de forma segura</h2>\n\n    <lib-payment-form (paymentSubmit)=\"onPaymentSubmit($event)\"></lib-payment-form>\n\n    @if (processingPayment) {\n    <div class=\"payment-message\" role=\"alert\">\n        {{ paymentMessage }}\n    </div>\n    }\n</div>\n <!-- <p>{{methodPay$| async | json}}</p> -->","import { Routes } from '@angular/router';\nimport { PaymentComponent } from '../containers/payment/payment.component';\nimport { BookingLayoutComponent, DefaultLayoutComponent } from 'shared';\n\nexport const payRoutes: Routes = [\n  {\n    path: '',\n    component: BookingLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: PaymentComponent,\n      },\n    ],\n  },\n];\n","/*\n * Public API Surface of pay\n */\n\nexport * from './infrastructure/ui/routes/pay.routes'\nexport * from './application/method-pay.usecase';\nexport * from './domain/model/method-pay.model';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}